{"version":3,"sources":["store/user.ts","components/header.tsx","components/footer.tsx","components/auth-provider.tsx","components/layout.tsx","pages/auth/Login.tsx","pages/Profile.tsx","components/home/steps.tsx","constants/status-colors.ts","components/home/orders.tsx","store/TrialData.ts","components/trailBanner.tsx","pages/Home.tsx","pages/News.tsx","store/BuyCoal.ts","components/buy-steps/condition.tsx","components/buy-steps/condition-info.tsx","components/buy-steps/1.tsx","pages/BuyCoal.tsx","pages/Payment.tsx","components/my-order/sidebar.tsx","components/my-order/order-timeline.tsx","pages/MyOrders.tsx","pages/auth/Register.tsx","pages/Transaction.tsx","pages/Bank.tsx","pages/Contact.tsx","pages/Upgrade.tsx","pages/companies.tsx","pages/FetchApp.tsx","App.tsx","reportWebVitals.ts","helpers/http-options.ts","theme.ts","index.tsx"],"names":["UserStore","Store","user","Navigation","path","isPhone","close","useState","registrationCompleted","registration_completed","HEADER_ITEMS","useMemo","title","icon","FiHome","FiCreditCard","FiShoppingCart","FiUser","FiPhone","visible","alert","setAlert","cancelApi","useFetch","drawer","useDisclosure","d","alignItems","userSelect","p","map","item","idx","isActive","to","onClick","mr","cursor","_hover","opacity","transition","borderBottomColor","borderBottomWidth","transform","willChange","mx","py","color","fontWeight","onOpen","size","isOpen","placement","onClose","spacing","pb","fontSize","base","lg","mt","name","textColor","bg","paid_membership","phone","my","post","then","res","message","localStorage","removeItem","setTimeout","window","location","reload","colorScheme","Header","focusRef","useRef","useLocation","shadow","px","md","w","src","aria-label","pathname","finalFocusRef","maxW","Footer","setContact","numberApi","useEffect","data","justifyContent","m","mb","rounded","href","target","rel","AuthProvider","children","history","useHistory","loading","setData","profileApi","getItem","push","update","s","Layout","Login","otp","setOtp","loginApi","otpValue","setOtpValue","setIsNewUser","setPhone","invalidOtp","setInvalidOtp","timer","setTimer","countdown","i","setInterval","clearInterval","xl","columns","minH","ml","country","inputStyle","width","inputProps","required","autoFocus","onChange","v","value","length","token","setItem","borderColor","textAlign","type","Profile","StepComponent","step","body","borderWidth","textTransform","Steps","statusColor","Completed","Approved","Pending","Rejected","Expired","Cancelled","HomeOrders","orders","setOrders","orderApi","overflow","order","sc","order_status","minW","order_id","span","coal_name","quantity","h","port_name","TrailDataStore","TrailBanner","trailData","useBreakpointValue","trial","trial_remaining","Home","get","console","log","paid_membership_required","className","as","allowFullScreen","height","News","page","setTotalPage","newsApi","newsPageApi","total_pages","BuyCoalStore","ConditionCard","isSelected","onSelect","condition","pos","roundedTop","Number","price","toLocaleString","exclude","ConditionInfo","keys","Object","space","key","index","includes","replace","ExampleCustomInput","forwardRef","ref","variant","BuyCoalStep1","props","setLoading","coalTypeApi","filteredPortApi","filteredVesselApi","conditionApi","selectedCondition","setSelectedCondition","activeCondition","setActiveCondition","vesselStatusPorts","setvesselStatusPorts","showSummary","setShowSummary","summary","setSummary","companies","_id","company","setCompany","noBidCoal","setNoBidCoal","noBids","setNoBids","noBidsMessage","setNoBidsMessage","selected","setSelected","coalType","setCoalType","port","setPort","vessel","setVessel","conditions","setConditions","bidPrice","setBidPrice","validity","setValidity","Date","getTime","validityTime","setValidityTime","minValidity","setMinValidity","maxValidity","setMaxValidity","qType","setQType","setQuantity","vesselLink","find","id","vesselId","vessel_link","Quantity","summaryKeys","bid_price","add_buy_coal_port_vessel_condition_id","String","unit","validity_in_minutes","differenceInMinutes","onVesselChange","add_buy_coal_port_vessel_id","selectedVessel","Vessel","vessel_name","firstCondition","min_validity_in_minutes","minDate","Math","floor","max_validity_in_minutes","minQ","min_truck_quantity","min_mt_quantity","maxQ","max_truck_quantity","max_mt_quantity","condition_details","lifting_period","Quality","quality","Payment","payment","qTypePicker","qError","e","comp","company_name","placeholder","coalId","coal","c","coal_id","vesselStatus","vessel_status","bids_open","bids_allowed","catch","err","onCoalTypeChange","isDisabled","portId","add_buy_coal_port_id","onPress","open","keyboardType","InputLeftElement","InputRightElement","showTimeSelect","maxDate","date","time","diffMins","customInput","val","colSpan","continue","BuyCoal","current","steps","setSteps","trialData","buyCoalStore","trialApi","startTrialApi","successModal","back","paid_member","trail","trial_type","display","closeOnEsc","closeOnOverlayClick","Razorpay","useRazorpay","amount","setAmount","setMessage","paymentApi","paymentVerifyApi","userStore","bankApi","banks","setBanks","amountInPaise","orderId","options","toString","currency","description","handler","response","a","user_id","createOrderId","remarks","notes","rzp1","on","bank","bank_name","bank_details","split","detail","MyOrderSidebar","active","maxH","format","order_time","OrderTimeline","remark","latest_status","MyOrders","setActive","ordersApi","orderDetailApi","setPage","more","setMore","URLSearchParams","search","o","remarkData","conditionKeys","status","backgroundColor","remark_time","roundedBottom","expiry","Register","userType","setUserType","gstno","setCompanies","registerApi","useForm","register","handleSubmit","favCoalApi","favCoals","setFavCoals","selectedfavCoal","setSelectedfavCoal","onSubmit","user_type","f_name","l_name","_companies","f","filter","leftIcon","gst","flexWrap","favCoal","_selectedfavCoal","STATUS","failure","text","success","Transaction","api","transactions","setTransactions","cellPadding","transaction","transaction_type","_status","transaction_date","Bank","subscriptionFeesApi","subscriptionFees","setSubscriptionFees","bnk","line","Contact","contact","contactApi","details","protocol","BENIFITS","Upgrade","listingApi","lastPointMessage","setLastPointMessage","Companies","companyDrawer","addApi","entry","newCompany","setNewCompany","editRemove","company_id","request_type","isNumeric","gst_no","FetchApp","isAndroid","navigator","userAgent","myInitialURL","downloadLink","deeplink","gridGap","App","isAuth","exact","strict","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","cachePolicy","CachePolicies","NO_CACHE","interceptors","request","jwt","assign","headers","Authorization","theme","extendTheme","fonts","heading","colors","brand","ReactDOM","render","StrictMode","httpOptions","url","process","document","getElementById"],"mappings":"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","file":"static/js/main.4526bb56.chunk.js","sourcesContent":["import { Store } from 'pullstate'\r\n\r\nexport const UserStore = new Store<any>({\r\n  user: null,\r\n})\r\n","import React, { useMemo, useRef, useState } from 'react'\r\nimport { useDisclosure } from '@chakra-ui/hooks'\r\nimport { Box, Flex, Spacer, Text } from '@chakra-ui/layout'\r\nimport { IconButton } from '@chakra-ui/button'\r\nimport {\r\n  Drawer,\r\n  DrawerOverlay,\r\n  DrawerContent,\r\n  Image,\r\n  Avatar,\r\n  HStack,\r\n  Badge,\r\n  Button,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Stack,\r\n  Center,\r\n  Heading,\r\n  Divider,\r\n} from '@chakra-ui/react'\r\nimport { FiArrowLeft, FiMenu, FiPlus, FiX } from 'react-icons/fi'\r\nimport { useLocation } from 'react-router'\r\nimport { Link } from 'react-router-dom'\r\nimport { UserStore } from '../store/user'\r\nimport {\r\n  FiCreditCard,\r\n  FiHome,\r\n  FiPhone,\r\n  FiShoppingCart,\r\n  FiUser,\r\n} from 'react-icons/fi'\r\nimport useFetch from 'use-http'\r\n\r\nexport type HeaderProps = {}\r\n\r\nconst Navigation = ({\r\n  path,\r\n  isPhone = false,\r\n  close = () => null,\r\n}: {\r\n  path: string\r\n  isPhone?: boolean\r\n  close?: () => void\r\n}) => {\r\n  const { user } = UserStore.useState()\r\n  const registrationCompleted = user?.registration_completed\r\n\r\n  const HEADER_ITEMS = useMemo(\r\n    () => [\r\n      {\r\n        title: 'Home',\r\n        path: '/',\r\n        icon: FiHome,\r\n      },\r\n      user &&\r\n        registrationCompleted && {\r\n          title: 'Buy Coal',\r\n          path: '/buy-coal',\r\n          icon: FiCreditCard,\r\n        },\r\n      user &&\r\n        registrationCompleted && {\r\n          title: 'My Order',\r\n          path: '/orders',\r\n          icon: FiShoppingCart,\r\n        },\r\n\r\n      !user\r\n        ? {\r\n            title: 'Login',\r\n            path: '/login',\r\n            icon: FiUser,\r\n          }\r\n        : null,\r\n      user &&\r\n        registrationCompleted && {\r\n          title: 'Payments',\r\n          path: '/payments',\r\n          icon: () => null,\r\n        },\r\n      user &&\r\n        registrationCompleted && {\r\n          title: 'Transactions',\r\n          path: '/transactions',\r\n          icon: FiUser,\r\n        },\r\n      {\r\n        title: 'Contact us',\r\n        path: '/contact',\r\n        icon: FiPhone,\r\n      },\r\n    ],\r\n    [user]\r\n  )\r\n  const [alert, setAlert] = useState<any>({\r\n    visible: false,\r\n  })\r\n  const isProfileActive = useMemo(() => path === '/profile', [path])\r\n  const cancelApi = useFetch('/api/add/cancel_subscription_request')\r\n  const drawer = useDisclosure()\r\n\r\n  const cancelRequest = () => {\r\n    cancelApi.post().then((res) => {\r\n      setAlert({\r\n        visible: true,\r\n        message:\r\n          res.message === 'success'\r\n            ? 'Your request has been sent'\r\n            : 'You already have a pending request',\r\n      })\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      d={isPhone ? 'unset' : 'flex'}\r\n      alignItems='center'\r\n      userSelect='none'\r\n      p={isPhone ? 12 : 0}\r\n    >\r\n      {HEADER_ITEMS.map((item, idx) => {\r\n        if (!item) return null\r\n\r\n        const isActive = path === item.path\r\n\r\n        return (\r\n          <Link to={item.path} key={idx} onClick={close}>\r\n            <Box\r\n              mr={4}\r\n              d='flex'\r\n              alignItems='center'\r\n              cursor='pointer'\r\n              _hover={{\r\n                opacity: !isActive && 0.8,\r\n              }}\r\n              transition='all 0.2s'\r\n              borderBottomColor={isActive ? 'red' : 'black'}\r\n              borderBottomWidth='4px'\r\n              transform={isActive ? 'scale(1.01)' : 'scale(1)'}\r\n              willChange='transform'\r\n            >\r\n              <Text\r\n                mx={2}\r\n                py={4}\r\n                color='#EDEDED'\r\n                fontWeight={isActive ? 'semibold' : 'normal'}\r\n              >\r\n                {item.title}\r\n              </Text>\r\n            </Box>\r\n          </Link>\r\n        )\r\n      })}\r\n      {user && (\r\n        <Box\r\n          onClick={() => {\r\n            drawer.onOpen()\r\n          }}\r\n          cursor={'pointer'}\r\n        >\r\n          <Avatar size={'md'} />\r\n        </Box>\r\n      )}\r\n      <Box>\r\n        <Drawer\r\n          isOpen={drawer.isOpen}\r\n          placement='right'\r\n          onClose={() => {\r\n            drawer.onClose()\r\n          }}\r\n          size={'md'}\r\n        >\r\n          <DrawerOverlay />\r\n          <DrawerContent>\r\n            <HStack p={4} spacing={6} pb={4}>\r\n              <Box\r\n                fontSize={'4xl'}\r\n                onClick={() => {\r\n                  drawer.onClose()\r\n                }}\r\n                cursor={'pointer'}\r\n              >\r\n                <FiArrowLeft />\r\n              </Box>\r\n              <Text fontWeight={'bold'} fontSize={{ base: '2xl', lg: '3xl' }}>\r\n                My Profile\r\n              </Text>\r\n            </HStack>\r\n            <Box mt={4} p={4}>\r\n              <Box>\r\n                <Avatar size={'lg'} />\r\n              </Box>\r\n              <Box mt={4}>\r\n                <Text fontWeight={'bold'} fontSize={'md'}>\r\n                  {user?.name}\r\n                </Text>\r\n              </Box>\r\n              <Box mt={4}>\r\n                <HStack>\r\n                  <HStack>\r\n                    <Text fontSize={'sm'} textColor={'gray.500'}>\r\n                      Account Type:\r\n                    </Text>\r\n                    <Badge\r\n                      bg={user?.paid_membership ? 'orange.200' : 'green.200'}\r\n                    >\r\n                      {user?.paid_membership ? 'Premium' : 'Basic'}\r\n                    </Badge>\r\n                  </HStack>\r\n                  <HStack>\r\n                    <Text fontSize={'sm'} textColor={'gray.500'}>\r\n                      Contact\r\n                    </Text>\r\n                    <Badge fontSize={'sm'}>{user?.phone}</Badge>\r\n                  </HStack>\r\n                </HStack>\r\n              </Box>\r\n            </Box>\r\n            <Box p={4} mt={2}>\r\n              <Stack spacing={8} cursor={'pointer'}>\r\n                <Link\r\n                  to={'/companies'}\r\n                  onClick={() => {\r\n                    drawer.onClose()\r\n                  }}\r\n                >\r\n                  <Heading size={'md'}>Company</Heading>\r\n                </Link>\r\n                {user?.paid_membership ? <Divider my={8} /> : null}\r\n                {user?.paid_membership ? (\r\n                  <Text\r\n                    fontWeight={'bold'}\r\n                    textColor={'red.500'}\r\n                    onClick={cancelRequest}\r\n                  >\r\n                    CANCEL SUBSCRIPTION\r\n                  </Text>\r\n                ) : null}\r\n                <Divider my={8} />\r\n                <Heading\r\n                  fontWeight={'bold'}\r\n                  size={'md'}\r\n                  onClick={() => {\r\n                    localStorage.removeItem('user-token')\r\n                    setTimeout(() => {\r\n                      window.location.reload()\r\n                    }, 800)\r\n                  }}\r\n                >\r\n                  Sign Out\r\n                </Heading>\r\n              </Stack>\r\n            </Box>\r\n          </DrawerContent>\r\n        </Drawer>\r\n      </Box>\r\n      <Box>\r\n        <Modal\r\n          isOpen={alert.visible}\r\n          onClose={() => {\r\n            setAlert({\r\n              visible: false,\r\n            })\r\n          }}\r\n        >\r\n          <ModalOverlay />\r\n          <ModalContent>\r\n            <ModalHeader>Modal Title</ModalHeader>\r\n\r\n            <ModalBody>\r\n              {alert.message}\r\n              <Center>\r\n                <Box mt={4}>\r\n                  <Button\r\n                    onClick={() => {\r\n                      setAlert({\r\n                        visible: false,\r\n                      })\r\n                    }}\r\n                    colorScheme={'red'}\r\n                  >\r\n                    Confirm\r\n                  </Button>\r\n                </Box>\r\n              </Center>\r\n            </ModalBody>\r\n          </ModalContent>\r\n        </Modal>\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nconst Header: React.FC<HeaderProps> = () => {\r\n  const focusRef = useRef(null)\r\n  const location = useLocation()\r\n  const { isOpen, onOpen, onClose } = useDisclosure()\r\n\r\n  return (\r\n    <Flex\r\n      shadow='base'\r\n      bg='black'\r\n      px={{ base: 2, md: 24 }}\r\n      alignItems='center'\r\n      py={{ base: 2, md: 4 }}\r\n    >\r\n      <Image p={4} w={44} src={'/assets/images/anmol-white-logo.png'} />\r\n      <Spacer />\r\n      <IconButton\r\n        mr={4}\r\n        d={{ base: 'flex', md: 'none' }}\r\n        aria-label='menu'\r\n        size='md'\r\n        icon={<FiMenu />}\r\n        onClick={onOpen}\r\n      />\r\n      <Box d={{ base: 'none', md: 'flex' }}>\r\n        <Navigation path={location.pathname} />\r\n      </Box>\r\n      <Drawer\r\n        isOpen={isOpen}\r\n        placement='left'\r\n        onClose={onClose}\r\n        finalFocusRef={focusRef}\r\n      >\r\n        <DrawerOverlay />\r\n        <DrawerContent maxW='xs' bg='black'>\r\n          <Navigation\r\n            close={() => {\r\n              setTimeout(onClose, 300)\r\n            }}\r\n            isPhone\r\n            path={location.pathname}\r\n          />\r\n        </DrawerContent>\r\n      </Drawer>\r\n    </Flex>\r\n  )\r\n}\r\nexport default Header\r\n","import { Image } from '@chakra-ui/image'\r\nimport {\r\n  Box,\r\n  Divider,\r\n  Flex,\r\n  Heading,\r\n  HStack,\r\n  SimpleGrid,\r\n  Stack,\r\n  Text,\r\n} from '@chakra-ui/layout'\r\nimport { useEffect, useState } from 'react'\r\n\r\nimport { FaFacebook, FaLinkedin, FaTwitter } from 'react-icons/fa'\r\nimport { FiPhone } from 'react-icons/fi'\r\nimport useFetch from 'use-http'\r\n\r\nconst Footer: React.FC = () => {\r\n  const [contact, setContact] = useState<any[]>([])\r\n  const numberApi = useFetch('/api/listing/contact')\r\n\r\n  useEffect(() => {\r\n    numberApi.post().then((res) => {\r\n      setContact(res.data)\r\n    })\r\n  }, [])\r\n\r\n  const QuickLinks = [\r\n    ['Home', '/'],\r\n    ['Buy Coal', '/buy-coal'],\r\n    ['My Order', '/orders'],\r\n    ['Payments', '/payments'],\r\n    ['Transactions', '/transactions'],\r\n    ['Contact us', '/contact'],\r\n  ]\r\n\r\n  return (\r\n    <Box bg='black'>\r\n      {/* <Box\r\n        d={{ base: 'block', md: 'flex' }}\r\n        py={{ base: 4, md: 24 }}\r\n        px={{ base: 12, md: 18 }}\r\n        maxW='5xl'\r\n        margin='0 auto'\r\n        justifyContent='space-between'\r\n      >\r\n        <Box w={{ base: 'full', md: '30%' }} mb={{ base: 12, md: 0 }}>\r\n          <Image src='/assets/images/anmol-white-logo.png' w={48} />\r\n        </Box>\r\n        <SimpleGrid\r\n          columns={{ base: 1, md: 3 }}\r\n          w='60%'\r\n          textColor='white'\r\n          spacing={12}\r\n        >\r\n          <Box>\r\n            <Heading size='sm' mb={4}>\r\n              Quick Links\r\n            </Heading>\r\n            <Stack>\r\n              {QuickLinks.map(([text, href], idx) => (\r\n                <a href={href} key={idx}>\r\n                  <Box _hover={{ opacity: 0.9 }}>{text}</Box>\r\n                </a>\r\n              ))}\r\n            </Stack>\r\n          </Box>\r\n\r\n          <Box>\r\n            <Heading size='sm' mb={4}>\r\n              Contact us\r\n            </Heading>\r\n            <Stack>\r\n              {contact.map((item, idx) => {\r\n                return (\r\n                  <Box key={idx}>\r\n                    <HStack>\r\n                      <Text></Text>\r\n                    </HStack>\r\n                  </Box>\r\n                )\r\n              })}\r\n            </Stack>\r\n          </Box>\r\n        </SimpleGrid>\r\n      </Box>\r\n\r\n      <Divider /> */}\r\n\r\n      <Flex\r\n        d={{ base: 'block', md: 'flex' }}\r\n        justifyContent='space-between'\r\n        m='0 auto'\r\n        maxW='8xl'\r\n        textColor='white'\r\n        p={8}\r\n      >\r\n        <Text mb={[0, 4, 0]}>\r\n          Copyright 2021 Anmol India Ltd. All rights reserved.\r\n        </Text>\r\n        {/* <Text mb={[0, 4, 0]}>Privacy Policy | Terms of use | Site Map</Text> */}\r\n        <HStack\r\n          mb={[0, 4, 0]}\r\n          mt={{ base: 4, lg: 0 }}\r\n          spacing={{ base: 4, lg: 4 }}\r\n        >\r\n          <Box p={4} bg='white' rounded='full' textColor='black'>\r\n            <a\r\n              href='https://twitter.com/anmol_india_ltd'\r\n              target={'_blank'}\r\n              rel='noreferrer'\r\n            >\r\n              <FaTwitter />\r\n            </a>\r\n          </Box>\r\n          <Box p={4} bg='white' rounded='full' textColor='black'>\r\n            <a\r\n              href='https://www.facebook.com/anmol.india.limited/'\r\n              target={'_blank'}\r\n              rel='noreferrer'\r\n            >\r\n              <FaFacebook />\r\n            </a>\r\n          </Box>\r\n        </HStack>\r\n      </Flex>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import { useEffect, useState } from 'react'\r\nimport { Box, Center, Spinner } from '@chakra-ui/react'\r\nimport useFetch from 'use-http'\r\nimport { UserStore } from '../store/user'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\n\r\nexport const AuthProvider: React.FC = ({ children }) => {\r\n  const history = useHistory()\r\n  const location = useLocation()\r\n  const [data, setData] = useState({ loading: true })\r\n  const profileApi = useFetch('/api/listing/profile')\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('user-token')\r\n    if (token)\r\n      profileApi.post().then((res) => {\r\n        let data = {\r\n          user: res.data,\r\n        }\r\n        if (!data.user) {\r\n          localStorage.removeItem('user-token')\r\n          window.location.reload()\r\n          return\r\n        }\r\n        if (!data?.user.registration_completed) {\r\n          if (location.pathname !== '/register') {\r\n            history.push('/register')\r\n          }\r\n        }\r\n\r\n        UserStore.update((s) => {\r\n          s.user = res.data\r\n          setData({ loading: false })\r\n        })\r\n      })\r\n    else {\r\n      setData({ loading: false })\r\n    }\r\n  }, [])\r\n\r\n  if (data.loading) {\r\n    return (\r\n      <Center mt={12}>\r\n        <Spinner />\r\n      </Center>\r\n    )\r\n  }\r\n\r\n  return <Box>{children}</Box>\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Box } from '@chakra-ui/layout'\r\n\r\nimport Header, { HeaderProps } from './header'\r\nimport Footer from './footer'\r\nimport { AuthProvider } from './auth-provider'\r\n\r\ninterface LayoutProps extends HeaderProps {}\r\n\r\nconst Layout: React.FC<LayoutProps> = ({ children }) => {\r\n  return (\r\n    <AuthProvider>\r\n      <Header />\r\n      <Box w='full'>\r\n        <Box>{children}</Box>\r\n      </Box>\r\n      <Box>\r\n        <Footer />\r\n      </Box>\r\n    </AuthProvider>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","import React, { useEffect, useState } from 'react'\r\nimport {\r\n  Box,\r\n  Heading,\r\n  SimpleGrid,\r\n  Stack,\r\n  HStack,\r\n  Text,\r\n  PinInput,\r\n  PinInputField,\r\n  Center,\r\n  FormControl,\r\n  FormLabel,\r\n  Button,\r\n} from '@chakra-ui/react'\r\nimport useFetch from 'use-http'\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\n\r\nconst Login: React.FC = () => {\r\n  const [otp, setOtp] = useState(false)\r\n  const loginApi = useFetch('/login')\r\n  const [otpValue, setOtpValue] = useState('')\r\n  const [isNewUser, setIsNewUser] = useState(false)\r\n  const [phone, setPhone] = useState('')\r\n  const [invalidOtp, setInvalidOtp] = useState(false)\r\n  const [timer, setTimer] = useState(40)\r\n\r\n  const login = () => {\r\n    if (phone) {\r\n      loginApi.post({ phone }).then((data) => {\r\n        if (data?.data) {\r\n          setOtp(true)\r\n          loginApi.post('/sendOTP', {\r\n            phone,\r\n          })\r\n          if (data.data.type === 'new') {\r\n            setIsNewUser(true)\r\n          }\r\n        }\r\n      })\r\n    }\r\n  }\r\n  const countdown = () => {\r\n    const i = setInterval(() => {\r\n      setTimer((timer) => {\r\n        if (timer === 1) {\r\n          clearInterval(i)\r\n        }\r\n        return timer - 1\r\n      })\r\n    }, 1000)\r\n  }\r\n\r\n  useEffect(() => {\r\n    countdown()\r\n  }, [])\r\n\r\n  const submitOtp = (value: any) => {\r\n    setInvalidOtp(false)\r\n    loginApi.post('/verifyOTP', { phone, otp: value }).then((data) => {\r\n      if (data?.message === 'error') {\r\n        setInvalidOtp(true)\r\n        setOtpValue('')\r\n        return\r\n      }\r\n      if (data?.token) {\r\n        localStorage.setItem('user-token', data.token)\r\n      }\r\n\r\n      if (data?.registration_completed === 'no') {\r\n        window.location.href = `/register`\r\n        return\r\n      }\r\n\r\n      window.location.href = `/`\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Box m='0 auto' maxW='6xl' mt={{ base: 2, xl: 14 }}>\r\n      <SimpleGrid columns={{ base: 1, xl: 2 }} m={4} minH={'450px'}>\r\n        <Box px={{ base: 4, xl: 24 }} py={{ base: 12, xl: 24 }} rounded='lg'>\r\n          <Heading size='3xl'>Anmol Coal</Heading>\r\n          <Text mt={4} color='gray.600'>\r\n            Login / Signup to enter your own BID price for purchasing COAL and\r\n            get the best deal upon approval\r\n          </Text>\r\n        </Box>\r\n        <Box\r\n          ml={{ base: 0, xl: 12 }}\r\n          px={{ base: 4, xl: 24 }}\r\n          py={{ base: 2, xl: 24 }}\r\n        >\r\n          <Stack spacing={4}>\r\n            <Box d={!otp ? 'block' : 'none'}>\r\n              <Heading size='lg'>Login/ Signup</Heading>\r\n              <FormControl mt={4}>\r\n                <FormLabel>Phone Number</FormLabel>\r\n                <PhoneInput\r\n                  country={'in'}\r\n                  inputStyle={{\r\n                    width: '100%',\r\n                  }}\r\n                  inputProps={{\r\n                    name: 'phone',\r\n                    required: true,\r\n                    autoFocus: true,\r\n                  }}\r\n                  onChange={(v) => setPhone(v)}\r\n                />\r\n              </FormControl>\r\n            </Box>\r\n            <Box d={otp ? 'block' : 'none'}>\r\n              <Center>\r\n                <Box>\r\n                  <HStack mt={6}>\r\n                    <PinInput\r\n                      value={otpValue}\r\n                      onChange={(v) => {\r\n                        setOtpValue(v)\r\n                        if (v.length === 4) {\r\n                          submitOtp(v)\r\n                        }\r\n                      }}\r\n                    >\r\n                      <PinInputField borderColor={'black'} />\r\n                      <PinInputField borderColor={'black'} />\r\n                      <PinInputField borderColor={'black'} />\r\n                      <PinInputField borderColor={'black'} />\r\n                    </PinInput>\r\n                  </HStack>\r\n                  <Text mt={4} textAlign={'center'}>\r\n                    Enter the OTP\r\n                  </Text>\r\n                  <Center>\r\n                    {timer === 0 ? (\r\n                      <Button\r\n                        onClick={() => {\r\n                          setTimer(40)\r\n                          countdown()\r\n                          loginApi.post('/sendOTP', {\r\n                            phone,\r\n                          })\r\n                        }}\r\n                        mt={4}\r\n                      >\r\n                        Resend OTP\r\n                      </Button>\r\n                    ) : (\r\n                      <Text mt={4}>\r\n                        Resend in 00:{timer < 10 ? '0' : ''}\r\n                        {timer}\r\n                      </Text>\r\n                    )}\r\n                  </Center>\r\n                  {invalidOtp && (\r\n                    <Text mt={4} color='red.500'>\r\n                      Invalid OTP\r\n                    </Text>\r\n                  )}\r\n                </Box>\r\n              </Center>\r\n            </Box>\r\n            <Button onClick={login} d={!otp ? 'block' : 'none'}>\r\n              Continue\r\n            </Button>\r\n          </Stack>\r\n        </Box>\r\n      </SimpleGrid>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import React, { useState } from 'react'\r\nimport {\r\n  Box,\r\n  Heading,\r\n  HStack,\r\n  Text,\r\n  Stack,\r\n  Flex,\r\n  Spacer,\r\n} from '@chakra-ui/layout'\r\nimport { FiArrowLeft, FiPlus } from 'react-icons/fi'\r\nimport { Button } from '@chakra-ui/react'\r\n\r\nconst Options = [\r\n  'Companies',\r\n  'Payment History',\r\n  'Order History',\r\n  'Cancel Membership',\r\n  'Sign Out',\r\n]\r\n\r\nconst Profile: React.FC = () => {\r\n  const [active, setActive] = useState('')\r\n\r\n  return (\r\n    <Box p={6}>\r\n      <HStack>\r\n        <Text fontSize={'4xl'}>\r\n          <FiArrowLeft />\r\n        </Text>\r\n        <Heading size={'lg'}>Profiles</Heading>\r\n        <Spacer />\r\n      </HStack>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Profile\r\n","import { Box, Heading, HStack, Image, SimpleGrid, Text } from '@chakra-ui/react'\r\n\r\nconst StepComponent = ({ step, body, title }) => {\r\n  return (\r\n    <>\r\n      <Box\r\n        d={{ base: 'none', lg: 'block' }}\r\n        p={6}\r\n        borderWidth='1px'\r\n        borderColor='#DEDEDE'\r\n        rounded='md'\r\n      >\r\n        <Text fontSize={12} fontWeight='600' color='#696969'>\r\n          STEP {step}\r\n        </Text>\r\n        <HStack mt={2} alignItems={'flex-start'} spacing={4}>\r\n          <Box>\r\n            <Image w={'16'} src={`/assets/steps/${step}.png`} />\r\n          </Box>\r\n          <Box>\r\n            <Heading textTransform={'uppercase'} size='xs'>\r\n              {title}\r\n            </Heading>\r\n            <Text mt={2} textColor={'gray.500'}>\r\n              {body}\r\n            </Text>\r\n          </Box>\r\n        </HStack>\r\n      </Box>\r\n\r\n      <Box\r\n        d={{ base: 'block', lg: 'none' }}\r\n        p={6}\r\n        borderWidth='1px'\r\n        borderColor='#DEDEDE'\r\n        rounded='md'\r\n      >\r\n        <Text fontSize={14} fontWeight='600' color='#696969'>\r\n          STEP {step}\r\n        </Text>\r\n        <HStack\r\n          d={{ base: 'block', lg: 'none' }}\r\n          mt={2}\r\n          alignItems={'flex-start'}\r\n          spacing={4}\r\n        >\r\n          <Box px={24} mt={4}>\r\n            <Image w={'16'} src={`/assets/steps/${step}.png`} />\r\n          </Box>\r\n          <Box>\r\n            <Heading\r\n              mt={4}\r\n              textAlign={'center'}\r\n              textTransform={'uppercase'}\r\n              size='xs'\r\n            >\r\n              {title}\r\n            </Heading>\r\n            <Text mt={2} textAlign={'center'} textColor={'gray.500'}>\r\n              {body}\r\n            </Text>\r\n          </Box>\r\n        </HStack>\r\n      </Box>\r\n    </>\r\n  )\r\n}\r\n\r\nconst Steps = () => {\r\n  return (\r\n    <Box p={8}>\r\n      <Heading mb={6}>How it works?</Heading>\r\n      <SimpleGrid columns={{ base: 1, lg: 3 }} spacing={4}>\r\n        <StepComponent\r\n          title={'select coal'}\r\n          body=\"Choose the kind of coal you'd want to purchase.\"\r\n          step={1}\r\n        />\r\n        <StepComponent\r\n          title={'coal market price'}\r\n          body=\"The market price of the coal you've chosen will be displayed.\"\r\n          step={2}\r\n        />\r\n        <StepComponent\r\n          title={'BID YOUR PRICE'}\r\n          body='Enter your fair price, which can be more/less or equal to the market price'\r\n          step={3}\r\n        />\r\n        <StepComponent\r\n          title={'ORDER CONFiRMATION'}\r\n          body='After submitting your order, wait for the confirmation.'\r\n          step={4}\r\n        />\r\n        <StepComponent\r\n          title={'order acceptence'}\r\n          body='Based on your bid price, your order will be accepted or rejected'\r\n          step={5}\r\n        />\r\n        <StepComponent\r\n          title={'bid your best'}\r\n          body='Everyday limited quantity of coal will be sold to Best Bidders.'\r\n          step={6}\r\n        />\r\n      </SimpleGrid>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Steps\r\n","export const statusColor: any = {\r\n  Completed: ['#45B264', '#45B2641A'],\r\n  Approved: ['#45B264', '#45B2641A'],\r\n  Pending: ['#EAA742', '#EAA7421A'],\r\n  Rejected: ['#F35050', '#F350501A'],\r\n  Expired: ['gray.600', 'gray.100'],\r\n  Cancelled: ['#F35050', '#F350501A'],\r\n  'Awaiting Payment': ['#F48B4A', '#F48B4A1A', 'Approved'],\r\n  'Reviewing Payment': ['#F48B4A', '#F48B4A1A', 'Approved'],\r\n  'Under Process': ['#45B264', '#45B2641A', 'Approved'],\r\n  'Order Problem': ['#EAA742', '#EAA7421A', 'Pending'],\r\n  'Order Issue': ['#F48B4A', '#F48B4A1A', 'Approved'],\r\n  'Order Remarks': ['#45B264', '#45B2641A'],\r\n}\r\n","import {\r\n  Box,\r\n  Button,\r\n  Center,\r\n  chakra,\r\n  Heading,\r\n  HStack,\r\n  Spacer,\r\n  Text,\r\n} from '@chakra-ui/react'\r\nimport { useEffect, useState } from 'react'\r\nimport useFetch from 'use-http'\r\nimport { BsArrowLeftCircle, BsArrowRightCircle } from 'react-icons/bs'\r\nimport { statusColor } from '../../constants/status-colors'\r\nimport { Link } from 'react-router-dom'\r\nimport { UserStore } from '../../store/user'\r\n\r\nconst HomeOrders = () => {\r\n  const [orders, setOrders] = useState<any[]>([])\r\n  const orderApi = useFetch('/api/listing/latest_orders')\r\n  const orderDetailApi = useFetch('/api/listing/order_details')\r\n  const [active, setActive] = useState(0)\r\n\r\n  const { user } = UserStore.useState()\r\n  useEffect(() => {\r\n    if (user)\r\n      orderApi.post().then((res) => {\r\n        setOrders(res.data)\r\n      })\r\n  }, [user])\r\n\r\n  if (orders.length === 0) {\r\n    return (\r\n      <Center>\r\n        <Text py={6} fontWeight={'bold'}>\r\n          No Orders\r\n        </Text>\r\n      </Center>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Box p={8}>\r\n      <HStack>\r\n        <Heading>Orders</Heading>\r\n        <Spacer />\r\n        <Link to={'/orders'}>\r\n          <Text fontWeight={'bold'}>View All</Text>\r\n        </Link>\r\n      </HStack>\r\n      <HStack\r\n        mt={4}\r\n        overflow={'auto'}\r\n        spacing={6}\r\n        d={{ base: 'none', lg: 'flex' }}\r\n      >\r\n        {orders.map((order, idx) => {\r\n          const sc = statusColor[order.order_status]\r\n\r\n          return (\r\n            <Box\r\n              key={idx}\r\n              borderWidth={'1px'}\r\n              rounded={'lg'}\r\n              shadow={'sm'}\r\n              p={2}\r\n              minW={'sm'}\r\n            >\r\n              <HStack>\r\n                <Text> ORDER ID: #{order.order_id}</Text>\r\n                <Spacer />\r\n                <Box borderWidth={'1px'} p='1' rounded={'full'}>\r\n                  <Text fontSize={'xs'} textColor={'black'}>\r\n                    STATUS :{' '}\r\n                    <chakra.span\r\n                      p={'1'}\r\n                      textColor={sc[0]}\r\n                      rounded={'full'}\r\n                      bg={sc[1]}\r\n                    >\r\n                      {order.order_status}\r\n                    </chakra.span>\r\n                  </Text>\r\n                </Box>\r\n              </HStack>\r\n              <Box mt={2}>\r\n                <Text fontWeight={'bold'}> {order.coal_name}</Text>\r\n              </Box>\r\n              <Box mt={2}>\r\n                <HStack>\r\n                  <Text>Quantity: {order.quantity}</Text>\r\n                  <Box\r\n                    h={'4px'}\r\n                    w={'4px'}\r\n                    rounded={'full'}\r\n                    bg={'gray.500'}\r\n                  ></Box>\r\n                  <Text>Port: {order.port_name}</Text>\r\n                </HStack>\r\n              </Box>\r\n              <Link to={`/orders?id=${order.order_id}`}>\r\n                <Box mt={2}>\r\n                  <Button\r\n                    fontSize={'xs'}\r\n                    rounded={'full'}\r\n                    colorScheme={'yellow'}\r\n                  >\r\n                    View Order Details\r\n                  </Button>\r\n                </Box>\r\n              </Link>\r\n            </Box>\r\n          )\r\n        })}\r\n      </HStack>\r\n      <HStack\r\n        mt={4}\r\n        overflow={'auto'}\r\n        spacing={6}\r\n        d={{ base: 'flex', lg: 'none' }}\r\n      >\r\n        {orders.map((order, idx) => {\r\n          const sc = statusColor[order.order_status]\r\n\r\n          return (\r\n            <Box\r\n              key={idx}\r\n              borderWidth={'1px'}\r\n              rounded={'lg'}\r\n              shadow={'sm'}\r\n              p={2}\r\n              minW={64}\r\n              overflow={'auto'}\r\n            >\r\n              <Text> #{order.order_id}</Text>\r\n\r\n              <Box mt={2}>\r\n                <Text fontWeight={'bold'}> {order.coal_name}</Text>\r\n              </Box>\r\n              <Box mt={4}>\r\n                <Text fontSize={'xs'} textColor={'black'}>\r\n                  STATUS :{' '}\r\n                  <chakra.span\r\n                    p={'1'}\r\n                    textColor={sc[0]}\r\n                    rounded={'full'}\r\n                    bg={sc[1]}\r\n                  >\r\n                    {order.order_status}\r\n                  </chakra.span>\r\n                </Text>\r\n              </Box>\r\n              <Box mr={6} px={2} mt={4}>\r\n                <Box py={2} rounded={'full'} bg={'#FEF3E5'}>\r\n                  <Center>\r\n                    <Link to={`/orders?id=${order.order_id}`}>\r\n                      <Text\r\n                        fontSize={'sm'}\r\n                        textColor={'#FCB563'}\r\n                        cursor={'pointer'}\r\n                        fontWeight={'bold'}\r\n                      >\r\n                        VIEW ORDER DETAILS\r\n                      </Text>\r\n                    </Link>\r\n                  </Center>\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n          )\r\n        })}\r\n      </HStack>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default HomeOrders\r\n","import { Store } from 'pullstate'\r\n\r\nexport const TrailDataStore = new Store<any>({\r\n  data: {},\r\n})\r\n","import {\r\n  Box,\r\n  Center,\r\n  HStack,\r\n  Spacer,\r\n  Text,\r\n  useBreakpointValue,\r\n} from '@chakra-ui/react'\r\nimport { Link } from 'react-router-dom'\r\nimport { TrailDataStore } from '../store/TrialData'\r\n\r\nfunction TrailBanner() {\r\n  const trailData = TrailDataStore.useState((s) => s.data)\r\n\r\n  return (\r\n    <Box bg={'#FEF3E5'} px={{ base: 7, lg: 24 }} py={4}>\r\n      <HStack spacing={{ base: 0, lg: 12 }} d={{ base: 'block', lg: 'flex' }}>\r\n        <Text fontSize={{ base: 'sm', lg: 'lg' }}>\r\n          You are using basic membership, to buy coal upgrade to premium\r\n          membership\r\n        </Text>\r\n        <Spacer />\r\n        <HStack spacing={4}>\r\n          <Link to={'/upgrade'}>\r\n            <Text\r\n              p={2}\r\n              rounded={'full'}\r\n              bg={'#FB8502'}\r\n              fontSize={'sm'}\r\n              cursor={'pointer'}\r\n              textColor={'white'}\r\n              fontWeight={'bold'}\r\n              mt={{ base: 4, lg: 0 }}\r\n            >\r\n              {useBreakpointValue({\r\n                base: 'Upgrade',\r\n                lg: 'Upgrade Now',\r\n              })}\r\n            </Text>\r\n          </Link>\r\n          <Center>\r\n            <Box\r\n              h={'25px'}\r\n              mt={{ base: 4, lg: 0 }}\r\n              bg={'black'}\r\n              w={'0.4px'}\r\n              d={trailData?.trial ? 'flex' : 'none'}\r\n            ></Box>\r\n          </Center>\r\n          <Box>\r\n            <Link to={'/buy-coal'}>\r\n              <Text\r\n                rounded={'full'}\r\n                textColor={'#FB8500'}\r\n                textTransform={'uppercase'}\r\n                bg={'#FAE5CE'}\r\n                p={2}\r\n                mt={{ base: 4, lg: 0 }}\r\n                fontSize={'sm'}\r\n                cursor={'pointer'}\r\n                d={trailData?.trial ? 'flex' : 'none'}\r\n              >\r\n                {trailData?.trial_remaining > 0\r\n                  ? 'Trail BIDS LEFT: ' + trailData?.trial_remaining\r\n                  : 'ACTIVATE NOW'}\r\n              </Text>\r\n            </Link>\r\n          </Box>\r\n        </HStack>\r\n      </HStack>\r\n    </Box>\r\n\r\n    // {trailData?.trial_remaining}\r\n  )\r\n}\r\n\r\nexport default TrailBanner\r\n","import React, { useEffect } from 'react'\r\nimport {\r\n  AspectRatio,\r\n  Box,\r\n  Button,\r\n  ButtonGroup,\r\n  Center,\r\n  chakra,\r\n  Heading,\r\n  HStack,\r\n  Image,\r\n  Stack,\r\n  Text,\r\n  VStack,\r\n} from '@chakra-ui/react'\r\n\r\nimport Steps from '../components/home/steps'\r\nimport HomeOrders from '../components/home/orders'\r\nimport useFetch from 'use-http'\r\nimport TrailBanner from '../components/trailBanner'\r\nimport { TrailDataStore } from '../store/TrialData'\r\nimport { UserStore } from '../store/user'\r\n\r\nconst Home: React.FC = () => {\r\n  const orderApi = useFetch('/api/listing/latest_orders')\r\n  useEffect(() => {\r\n    orderApi.get().then((res) => {\r\n      console.log('res', res)\r\n    })\r\n  }, [])\r\n\r\n  const user = UserStore.useState((s) => s.user)\r\n\r\n  const trailData = TrailDataStore.useState((s) => s.data)\r\n\r\n  return (\r\n    <Box>\r\n      <Box>\r\n        {trailData?.paid_membership_required && !user?.paid_membership ? (\r\n          <TrailBanner />\r\n        ) : null}\r\n      </Box>\r\n      <Stack>\r\n        <Box\r\n          d={{ base: 'none', lg: 'flex' }}\r\n          w={'full'}\r\n          color='white'\r\n          className='banner'\r\n        >\r\n          <HStack maxW='4xl' m='0 auto' w='full' spacing={12}>\r\n            <Image w={72} src='/assets/images/mockup.png' />\r\n            <Box>\r\n              <Heading size='lg' fontWeight={'normal'}>\r\n                We're the best in the business of\r\n              </Heading>\r\n              <Heading size='lg' color='#FB8500' as='i'>\r\n                Coal Trader\r\n              </Heading>\r\n              <br />\r\n              <ButtonGroup>\r\n                <a\r\n                  href='https://play.google.com/store/apps/details?id=com.anmolindialtd.anmolindialimited&hl=en&gl=US'\r\n                  target={'_blank'}\r\n                  rel='noreferrer'\r\n                >\r\n                  <Button\r\n                    colorScheme={'orange'}\r\n                    mt={4}\r\n                    textTransform={'uppercase'}\r\n                  >\r\n                    Download from play store\r\n                  </Button>\r\n                </a>\r\n                <a\r\n                  href='https://apps.apple.com/in/app/anmol-coal/id1055161589'\r\n                  target={'_blank'}\r\n                  rel='noreferrer'\r\n                >\r\n                  <Button\r\n                    colorScheme={'orange'}\r\n                    mt={4}\r\n                    textTransform={'uppercase'}\r\n                  >\r\n                    Download from App store\r\n                  </Button>\r\n                </a>\r\n              </ButtonGroup>\r\n            </Box>\r\n          </HStack>\r\n        </Box>\r\n        <Box\r\n          d={{ base: 'block', lg: 'none' }}\r\n          className='banner'\r\n          w={'full'}\r\n          color={'white'}\r\n        >\r\n          <Center>\r\n            <VStack>\r\n              <Text\r\n                textAlign={'center'}\r\n                color={'white'}\r\n                fontSize={'2xl'}\r\n                fontWeight={'medium'}\r\n                px={20}\r\n                mt={8}\r\n              >\r\n                We're the best in the business of{' '}\r\n                <chakra.span textColor={'#FB8500'} fontWeight={'medium'}>\r\n                  Coal Trading\r\n                </chakra.span>\r\n              </Text>\r\n              <Box>\r\n                <a\r\n                  href='https://play.google.com/store/apps/details?id=com.anmolindialtd.anmolindialimited&hl=en&gl=US'\r\n                  target={'_blank'}\r\n                  rel='noreferrer'\r\n                >\r\n                  <Button\r\n                    colorScheme={'orange'}\r\n                    mt={4}\r\n                    textTransform={'uppercase'}\r\n                  >\r\n                    Download from play store\r\n                  </Button>\r\n                </a>\r\n              </Box>\r\n              <Box pb={4}>\r\n                <a\r\n                  href='https://apps.apple.com/in/app/anmol-coal/id1055161589'\r\n                  target={'_blank'}\r\n                  rel='noreferrer'\r\n                >\r\n                  <Button\r\n                    colorScheme={'orange'}\r\n                    mt={4}\r\n                    textTransform={'uppercase'}\r\n                  >\r\n                    Download from App store\r\n                  </Button>\r\n                </a>\r\n              </Box>\r\n              <Image w={52} src='/assets/images/mockup.png' />\r\n            </VStack>\r\n          </Center>\r\n        </Box>\r\n      </Stack>\r\n      <Steps />\r\n      <HomeOrders />\r\n      <Box py={12} bg='orange.100'>\r\n        <Center>\r\n          <Box textAlign={'center'}>\r\n            <Heading size='lg'>Get Best Deals</Heading>\r\n            <Text my={4}>\r\n              Select the coal & try the bid option to best deals on it\r\n            </Text>\r\n            <Button\r\n              colorScheme={'orange'}\r\n              onClick={() => {\r\n                window.location.href = '/buy-coal'\r\n              }}\r\n            >\r\n              Start Buying Now\r\n            </Button>\r\n          </Box>\r\n        </Center>\r\n        <Box mt={8} d={{ base: 'none', lg: 'block' }}>\r\n          <Center>\r\n            <iframe\r\n              title='anmol'\r\n              src='https://www.youtube.com/embed/namJdK_BYqM'\r\n              allowFullScreen\r\n              width={'600'}\r\n              height={'350'}\r\n            />\r\n          </Center>\r\n        </Box>\r\n        <Box mt={8} d={{ base: 'block', lg: 'none' }}>\r\n          <Center>\r\n            <iframe\r\n              title='anmol'\r\n              src='https://www.youtube.com/embed/namJdK_BYqM'\r\n              allowFullScreen\r\n              width={'300'}\r\n              height={'200'}\r\n            />\r\n          </Center>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Box } from '@chakra-ui/layout'\r\nimport useFetch from 'use-http'\r\n\r\nconst News: React.FC = () => {\r\n  const [page, setPage] = useState(1)\r\n  const [totalPage, setTotalPage] = useState(1)\r\n  const newsApi = useFetch('/api/listing/wordpress_news')\r\n  const newsPageApi = useFetch('/api/listing/wordpress_news_pages')\r\n  const [news, setNews] = useState([])\r\n\r\n  useEffect(() => {\r\n    newsPageApi.post().then((data) => {\r\n      setTotalPage(data.total_pages)\r\n    })\r\n    newsApi.post({ page: page }).then((data) => {\r\n      console.log('data=', data)\r\n    })\r\n  }, [])\r\n\r\n  return <Box></Box>\r\n}\r\n\r\nexport default News\r\n","import { Store } from 'pullstate'\r\n\r\ntype Data = {\r\n  bid_price?: string | number\r\n  add_buy_coal_port_vessel_condition_id?: string\r\n  company?: string\r\n  quantity?: string\r\n  unit?: string\r\n  validity_in_minutes?: number\r\n}\r\n\r\nexport const BuyCoalStore = new Store<{ data: Data }>({\r\n  data: {},\r\n})\r\n","import React from 'react'\r\nimport { Box, Text, Heading, Circle, HStack } from '@chakra-ui/react'\r\n\r\ntype CardProps = {\r\n  isSelected?: boolean\r\n  title: string\r\n  onSelect: () => void\r\n  condition?: any\r\n}\r\n\r\nconst ConditionCard: React.FC<CardProps> = ({\r\n  title,\r\n  isSelected,\r\n  onSelect,\r\n  condition,\r\n}) => {\r\n  return (\r\n    <Box\r\n      onClick={onSelect}\r\n      minW='180px'\r\n      p={4}\r\n      borderWidth='1px'\r\n      rounded='xl'\r\n      cursor='pointer'\r\n      transition='all 0.2s'\r\n      _hover={{ shadow: 'lg' }}\r\n      userSelect='none'\r\n      pos='relative'\r\n    >\r\n      <HStack>\r\n        <Box\r\n          p={1}\r\n          borderWidth={'1px'}\r\n          rounded='full'\r\n          borderColor={isSelected ? 'red.500' : 'gray.400'}\r\n        >\r\n          <Circle w='12px' h='12px' bg={isSelected ? 'red.500' : 'white'} />\r\n        </Box>\r\n\r\n        <Text roundedTop='xl' py={2} fontWeight='semibold'>\r\n          {title}\r\n        </Text>\r\n      </HStack>\r\n      <Box>\r\n        <Text textTransform={'capitalize'}>Indicative Price</Text>\r\n        <Heading size='md'>\r\n          ₹{Number(condition.price).toLocaleString()} /-\r\n        </Heading>\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default ConditionCard\r\n","import React from 'react'\r\nimport { Box, HStack, Stack, Text } from '@chakra-ui/react'\r\n\r\ntype Props = {\r\n  data: any\r\n}\r\n\r\nconst exclude = ['id']\r\n\r\nconst ConditionInfo: React.FC<Props> = ({ data }) => {\r\n  const keys = Object.keys(data)\r\n\r\n  return (\r\n    <Stack space={4}>\r\n      {keys.map((key, index) => {\r\n        const value = data[key]\r\n        if (exclude.includes(key)) return null\r\n\r\n        if (!value || value.length < 2) return null\r\n\r\n        return (\r\n          <HStack alignItems={'flex-start'} key={index}>\r\n            <Box mt={3}>\r\n              <Box h='6px' w='6px' rounded='full' bg='#696969' />\r\n            </Box>\r\n            <Box ml={2}>\r\n              <Text color='#696969' fontSize={'lg'} textTransform='capitalize'>\r\n                {key.replace(/_/g, ' ')}\r\n              </Text>\r\n              <Text mt={1} fontSize={'lg'}>\r\n                {value}\r\n              </Text>\r\n            </Box>\r\n          </HStack>\r\n        )\r\n      })}\r\n    </Stack>\r\n  )\r\n}\r\n\r\nexport default ConditionInfo\r\n","import React, { forwardRef, useEffect, useMemo, useState } from 'react'\r\nimport {\r\n  Box,\r\n  FormControl,\r\n  FormLabel,\r\n  Select,\r\n  SimpleGrid,\r\n  Spinner,\r\n  Center,\r\n  Heading,\r\n  Text,\r\n  Divider,\r\n  Stack,\r\n  Input,\r\n  HStack,\r\n  RadioGroup,\r\n  Badge,\r\n  Radio,\r\n  Button,\r\n  Spacer,\r\n  Drawer,\r\n  DrawerOverlay,\r\n  DrawerContent,\r\n  DrawerHeader,\r\n  DrawerBody,\r\n  GridItem,\r\n} from '@chakra-ui/react'\r\nimport useFetch from 'use-http'\r\nimport { CoalType, Port, Vessel } from '../../types'\r\nimport { BuyCoalStore } from '../../store/BuyCoal'\r\nimport ConditionCard from './condition'\r\nimport ConditionInfo from './condition-info'\r\nimport { FiArrowLeft, FiDownload, FiInfo } from 'react-icons/fi'\r\nimport DatePicker from 'react-datepicker'\r\n\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport { differenceInMinutes } from 'date-fns'\r\nimport { UserStore } from '../../store/user'\r\n\r\ninterface SelectedState {\r\n  coalId?: string\r\n  portId?: string\r\n  vesselId?: string\r\n  noOfTruck?: number\r\n  conditionId?: number\r\n  condition?: any\r\n  company?: string\r\n}\r\n\r\ntype Props = {\r\n  continue: () => void\r\n}\r\n\r\nconst ExampleCustomInput = forwardRef<any>(({ value, onClick }: any, ref) => (\r\n  <Button variant={'link'} onClick={onClick} ref={ref}>\r\n    Edit time\r\n  </Button>\r\n))\r\n\r\nconst BuyCoalStep1: React.FC<Props> = (props) => {\r\n  const { user } = UserStore.useState()\r\n  const [loading, setLoading] = useState(false)\r\n  const coalTypeApi = useFetch('/api/listing/buyCoalList')\r\n  const filteredPortApi = useFetch('/api/listing/getFilteredPort')\r\n  const filteredVesselApi = useFetch('/api/listing/getFilteredVessel')\r\n  const conditionApi = useFetch('/api/listing/getFilteredCondition')\r\n  const [selectedCondition, setSelectedCondition] = useState(0)\r\n  const [activeCondition, setActiveCondition] = useState<any>({})\r\n  const [vesselStatusPorts, setvesselStatusPorts] = useState<any[]>([])\r\n  const [showSummary, setShowSummary] = useState(false)\r\n  const [summary, setSummary] = useState<any>({\r\n    'Order Date': '10 mar 2021',\r\n  })\r\n\r\n  const [company, setCompany] = useState(user.companies[0]._id)\r\n  const [noBidCoal, setNoBidCoal] = useState<any>('')\r\n  const [noBids, setNoBids] = useState(false)\r\n  const [noBidsMessage, setNoBidsMessage] = useState('')\r\n\r\n  const [selected, setSelected] = useState<SelectedState>({})\r\n\r\n  const [coalType, setCoalType] = useState<CoalType[]>([])\r\n\r\n  const [port, setPort] = useState<Port[]>([])\r\n  const [vessel, setVessel] = useState<Vessel[]>([])\r\n  const [conditions, setConditions] = useState<any[]>([])\r\n  const [bidPrice, setBidPrice] = useState(0)\r\n\r\n  const [validity, setValidity] = useState('6 HRS 30 MIN')\r\n  const [validityTime, setValidityTime] = useState(\r\n    new Date(new Date().getTime() + 390 * 60000)\r\n  )\r\n  const [minValidity, setMinValidity] = useState(\r\n    new Date(new Date().getTime() + 390 * 60000)\r\n  )\r\n\r\n  const [maxValidity, setMaxValidity] = useState(\r\n    new Date(new Date().getTime() + 1440 * 60000)\r\n  )\r\n  const [qType, setQType] = useState('MT')\r\n  const [quantity, setQuantity] = useState('')\r\n\r\n  const vesselLink = useMemo(() => {\r\n    const v = vessel.find((v: any) => v.id === selected.vesselId)\r\n    return v?.vessel.vessel_link\r\n  }, [selected.vesselId])\r\n\r\n  useEffect(() => {\r\n    setSummary({\r\n      ...summary,\r\n      Quantity: `${quantity} ${qType}`,\r\n    })\r\n  }, [quantity])\r\n\r\n  const summaryKeys = useMemo(() => {\r\n    return Object.keys(summary)\r\n  }, [summary])\r\n\r\n  useEffect(() => {\r\n    BuyCoalStore.update((s) => {\r\n      s.data.bid_price = bidPrice\r\n      s.data.add_buy_coal_port_vessel_condition_id = String(activeCondition._id)\r\n      s.data.company = company\r\n\r\n      s.data.unit = qType\r\n      s.data.quantity = quantity\r\n      s.data.validity_in_minutes = differenceInMinutes(validityTime, new Date())\r\n    })\r\n  }, [selected, bidPrice, qType, quantity])\r\n\r\n  const onCoalTypeChange = (coalId: string) => {\r\n    setLoading(true)\r\n    setConditions([])\r\n    setSelected({\r\n      coalId,\r\n    })\r\n    setPort([])\r\n    setVessel([])\r\n    setActiveCondition({})\r\n    setNoBids(false)\r\n    setNoBidsMessage('')\r\n\r\n    const coal = coalType.find((c) => c.coal._id === coalId)\r\n    setSummary({\r\n      ...summary,\r\n      'Coal Type': coal?.coal.coal_name,\r\n    })\r\n    filteredPortApi\r\n      .post({ coal_id: coalId })\r\n      .then((data) => {\r\n        const vesselStatus = data.data.find((i: any) => i.vessel_status)\r\n\r\n        setLoading(false)\r\n\r\n        if (!data.bids_open) {\r\n          setNoBids(true)\r\n          setNoBidsMessage(data.message)\r\n          return\r\n        }\r\n\r\n        if (!data.bids_allowed) {\r\n          setNoBidsMessage('BIds not aallllwed')\r\n          setNoBids(true)\r\n          setNoBidCoal(coal?.coal.coal_name)\r\n          return\r\n        }\r\n        setNoBidCoal('')\r\n\r\n        if (vesselStatus) {\r\n          setvesselStatusPorts([...vesselStatusPorts, vesselStatus._id])\r\n        }\r\n\r\n        setPort(data.data)\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  const onPortChange = (portId: string) => {\r\n    setLoading(true)\r\n    setSelected({\r\n      ...selected,\r\n      portId,\r\n    })\r\n    setVessel([])\r\n    setConditions([])\r\n    setActiveCondition({})\r\n\r\n    filteredVesselApi\r\n      .post({ add_buy_coal_port_id: portId })\r\n      .then((data) => {\r\n        setLoading(false)\r\n        if (!vesselStatusPorts.includes(portId)) {\r\n          onVesselChange(data.data[0]._id)\r\n          return\r\n        }\r\n        setVessel(data.data)\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  const onVesselChange = (vesselId: string) => {\r\n    setLoading(true)\r\n    setConditions([])\r\n    setActiveCondition({})\r\n\r\n    conditionApi\r\n      .post({ add_buy_coal_port_vessel_id: vesselId })\r\n      .then((data) => {\r\n        setLoading(false)\r\n        setConditions(data.data)\r\n        if (data.data.length === 0) {\r\n          return\r\n        }\r\n\r\n        const selectedVessel = vessel.find((v, idx) => {\r\n          return v.id === vesselId\r\n        })\r\n\r\n        setSummary({\r\n          ...summary,\r\n          Vessel: selectedVessel?.vessel.vessel_name,\r\n        })\r\n\r\n        const firstCondition = data.data[0]\r\n        setActiveCondition(firstCondition)\r\n\r\n        setSelected({\r\n          ...selected,\r\n          vesselId,\r\n        })\r\n\r\n        if (firstCondition.unit === 'Both') {\r\n          setQType('MT')\r\n        } else setQType(firstCondition.unit)\r\n\r\n        if (firstCondition.min_validity_in_minutes) {\r\n          const minDate = new Date(\r\n            new Date().getTime() +\r\n              firstCondition.min_validity_in_minutes * 60000\r\n          )\r\n\r\n          setValidityTime(minDate)\r\n          setMinValidity(minDate)\r\n        }\r\n\r\n        setValidity(\r\n          `${Math.floor(firstCondition.min_validity_in_minutes / 60)} HRS ${\r\n            firstCondition.min_validity_in_minutes % 60\r\n          } MIN`\r\n        )\r\n\r\n        if (firstCondition.max_validity_in_minutes) {\r\n          setMaxValidity(\r\n            new Date(\r\n              new Date().getTime() +\r\n                firstCondition.max_validity_in_minutes +\r\n                30440 * 60000\r\n            )\r\n          )\r\n        }\r\n\r\n        setQuantity('')\r\n\r\n        setSelected({\r\n          ...selected,\r\n          vesselId,\r\n        })\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    coalTypeApi.post().then((data) => {\r\n      setCoalType(data?.data)\r\n    })\r\n  }, [])\r\n\r\n  const minQ = useMemo(\r\n    () =>\r\n      qType === 'Truck'\r\n        ? activeCondition?.min_truck_quantity || 1\r\n        : activeCondition?.min_mt_quantity || 36,\r\n    [activeCondition, qType]\r\n  )\r\n  const maxQ = useMemo(\r\n    () =>\r\n      qType === 'Truck'\r\n        ? activeCondition?.max_truck_quantity || null\r\n        : activeCondition?.max_mt_quantity || null,\r\n    [activeCondition, qType]\r\n  )\r\n\r\n  useEffect(() => {\r\n    setSummary({\r\n      ...summary,\r\n      'Lifting Period':\r\n        activeCondition?.condition?.condition_details.lifting_period,\r\n      Quality: activeCondition?.condition?.condition_details.quality,\r\n      Payment: activeCondition?.condition?.condition_details.payment,\r\n    })\r\n  }, [activeCondition])\r\n\r\n  const qTypePicker = useMemo(() => {\r\n    return activeCondition && activeCondition?.unit === 'Both'\r\n  }, [activeCondition])\r\n\r\n  const qError = useMemo(() => {\r\n    if (qType === 'Truck') {\r\n      if (quantity > maxQ) {\r\n        return `Quantity should be less than ${maxQ}`\r\n      }\r\n      if (quantity < minQ) {\r\n        return `Quantity should be greater than ${minQ}`\r\n      }\r\n    } else {\r\n      if (quantity > maxQ) {\r\n        return `Quantity should be less than ${maxQ}`\r\n      }\r\n      if (quantity < minQ) {\r\n        return `Quantity should be greater than ${minQ}`\r\n      }\r\n    }\r\n    return null\r\n  }, [minQ, maxQ, quantity])\r\n\r\n  const OpenSummary = () => {\r\n    setShowSummary(true)\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <Center mb={12}>{loading && <Spinner />}</Center>\r\n      <SimpleGrid mb={12} spacing={6} columns={{ base: 1, lg: 2 }}>\r\n        <FormControl>\r\n          <FormLabel>Company</FormLabel>\r\n          <Select\r\n            onChange={(e) => {\r\n              setCompany(e.target.value)\r\n            }}\r\n          >\r\n            {user?.companies?.map((comp, idx) => (\r\n              <option key={idx} value={comp._id}>\r\n                {comp.company_name}\r\n              </option>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <FormControl>\r\n          <FormLabel>Coal Type</FormLabel>\r\n          <Select\r\n            placeholder='Select Coal Type'\r\n            onChange={(e) => onCoalTypeChange(e.target.value)}\r\n          >\r\n            {coalType?.map((item, idx) => (\r\n              <option key={idx} value={item.coal._id}>\r\n                {item.coal.coal_name}\r\n              </option>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n\r\n        {!noBids ? (\r\n          <FormControl>\r\n            <FormLabel>Port</FormLabel>\r\n            <Select\r\n              isDisabled={!selected.coalId}\r\n              placeholder='Select Port'\r\n              onChange={(e) => onPortChange(e.target.value)}\r\n            >\r\n              {port.map((item, idx) => (\r\n                <option key={idx} value={item.id}>\r\n                  {item.port.port_name}\r\n                </option>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        ) : (\r\n          <Text>{noBidsMessage || noBidCoal}</Text>\r\n        )}\r\n        {vessel.length > 0 && (\r\n          <>\r\n            <FormControl>\r\n              <FormLabel>Vessel</FormLabel>\r\n              <Select\r\n                isDisabled={!selected.portId}\r\n                placeholder='Select Vessel'\r\n                onChange={(e) => onVesselChange(e.target.value)}\r\n              >\r\n                {vessel.map((item, idx) => (\r\n                  <option key={idx} value={item.id}>\r\n                    {item.vessel.vessel_name}\r\n                  </option>\r\n                ))}\r\n              </Select>\r\n              {vesselLink && (\r\n                <HStack\r\n                  mt={3}\r\n                  alignItems='center'\r\n                  onPress={() => {\r\n                    window.open(vesselLink)\r\n                  }}\r\n                  cursor='pointer'\r\n                >\r\n                  <FiDownload color='#FB8500' />\r\n                  <Text ml={2} color='#FB8500' fontWeight={'semibold'}>\r\n                    Click here to download report\r\n                  </Text>\r\n                </HStack>\r\n              )}\r\n            </FormControl>\r\n          </>\r\n        )}\r\n      </SimpleGrid>\r\n\r\n      <Stack spacing={4} d={conditions.length > 1 ? 'flex' : 'none'}>\r\n        <Box>\r\n          <Heading size='md'>Select any condition</Heading>\r\n          <Text mt={2}>\r\n            Based on selected condition, indicative price will be displayed\r\n          </Text>\r\n        </Box>\r\n        <RadioGroup>\r\n          <HStack\r\n            overflow={'auto'}\r\n            d={conditions.length === 1 ? 'none' : 'flex'}\r\n          >\r\n            {conditions?.map((condition, idx) => (\r\n              <ConditionCard\r\n                key={idx}\r\n                title={`Condition ${idx + 1}`}\r\n                isSelected={selectedCondition === idx}\r\n                onSelect={() => {\r\n                  setSelectedCondition(idx)\r\n                  setSelected({\r\n                    ...selected,\r\n                    condition: condition,\r\n                  })\r\n                  setQType(condition.unit)\r\n                  setActiveCondition(condition)\r\n                }}\r\n                condition={condition}\r\n              />\r\n            ))}\r\n          </HStack>\r\n        </RadioGroup>\r\n\r\n        <Divider my={6} />\r\n      </Stack>\r\n\r\n      <Box d={activeCondition?.price ? 'block' : 'none'} rounded='lg'>\r\n        <Text color='gray.500' fontSize='lg'>\r\n          Indicative Price\r\n        </Text>\r\n        <Heading fontSize={'xl'} fontWeight={'bold'} mt={1}>\r\n          ₹ {Number(activeCondition?.price).toLocaleString()}/- PMT\r\n        </Heading>\r\n        <Text my={2}>\r\n          Rs. {Number(activeCondition?.price - 400).toLocaleString()} PMT + 5% +\r\n          Rs. 400 PMT\r\n        </Text>\r\n\r\n        <ConditionInfo\r\n          data={activeCondition?.condition?.condition_details || {}}\r\n        />\r\n\r\n        <Box mt={4}>\r\n          <Heading size='md' mb={3} fontWeight={'semibold'}>\r\n            Quantity\r\n          </Heading>\r\n          {qTypePicker && (\r\n            <RadioGroup\r\n              value={qType}\r\n              onChange={(e) => setQType(e)}\r\n              name='qType'\r\n              colorScheme={'red'}\r\n            >\r\n              <HStack space={4}>\r\n                <Radio size='sm' value='Truck'>\r\n                  BY TRUCK\r\n                </Radio>\r\n                <Radio size='sm' value='MT'>\r\n                  BY METRIC TON\r\n                </Radio>\r\n              </HStack>\r\n            </RadioGroup>\r\n          )}\r\n\r\n          {!qTypePicker ? (\r\n            activeCondition.unit === 'Truck' ? (\r\n              <Text>Enter Quantity in Truck</Text>\r\n            ) : (\r\n              <Text>Enter Quantity in MT</Text>\r\n            )\r\n          ) : null}\r\n\r\n          <Input\r\n            mt={4}\r\n            keyboardType='numeric'\r\n            onChange={(e) => setQuantity(e.target.value)}\r\n            placeholder={\r\n              qType === 'Truck'\r\n                ? 'Enter number of trucks'\r\n                : 'Enter quantity in MT'\r\n            }\r\n          />\r\n          <HStack mt={4} alignItems={'center'}>\r\n            <FiInfo />\r\n            {minQ && (\r\n              <Badge p={1} ml={2} rounded='full'>\r\n                {`Min ${qType === 'Truck' ? 'trucks' : 'quantity'}: ${minQ} ${\r\n                  qType === 'MT' ? 'MT' : ''\r\n                }`}\r\n              </Badge>\r\n            )}\r\n\r\n            {maxQ && (\r\n              <Badge p={1} rounded='full'>{`Max ${\r\n                qType === 'Truck' ? 'trucks' : 'quantity'\r\n              }: ${maxQ} ${qType === 'MT' ? 'MT' : ''}`}</Badge>\r\n            )}\r\n          </HStack>\r\n          <Text mt={4} color='red.400'>\r\n            {qError}\r\n          </Text>\r\n        </Box>\r\n\r\n        <Box mt={4}>\r\n          <Heading size='md'>Enter your bid price</Heading>\r\n          <Box mt={4}>\r\n            <HStack p={2} bg='red.100' roundedTop='xl'>\r\n              <Text></Text>\r\n              <Text ml={2}>\r\n                Selected Indicative Price is ₹{' '}\r\n                {Number(activeCondition?.price).toLocaleString()} PMT\r\n              </Text>\r\n            </HStack>\r\n            <Box>\r\n              <Input\r\n                py={4}\r\n                placeholder='Enter your bid price'\r\n                keyboardType='numeric'\r\n                onChange={(e) => {\r\n                  setBidPrice(Number(e.target.value || 0))\r\n                }}\r\n                InputLeftElement={\r\n                  <Text fontSize={'3xl'} px={2}>\r\n                    ₹\r\n                  </Text>\r\n                }\r\n                InputRightElement={\r\n                  <Text color='red.500' fontWeight={'bold'} mr={3}>\r\n                    BID\r\n                  </Text>\r\n                }\r\n                size='lg'\r\n              />\r\n              {bidPrice > 400 && (\r\n                <Text mt={2}>\r\n                  Rs. {Number(bidPrice - 400).toLocaleString()}\r\n                  PMT + 5% + Rs. 400 PMT\r\n                </Text>\r\n              )}\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n\r\n        <Box mt={4}>\r\n          <Heading size='md' mb={4}>\r\n            Validity\r\n          </Heading>\r\n          <HStack w='full'>\r\n            <HStack>\r\n              <Spacer />\r\n              <Text>Time Left:</Text>\r\n              <Text>{validity}</Text>\r\n            </HStack>\r\n            <Spacer />\r\n            <Box>\r\n              <DatePicker\r\n                showTimeSelect\r\n                minDate={minValidity}\r\n                maxDate={maxValidity}\r\n                value={validity}\r\n                onChange={(date) => {\r\n                  if (!date) return\r\n                  setValidityTime(date)\r\n\r\n                  const time = new Date(date)\r\n\r\n                  const diffMins = differenceInMinutes(time, new Date())\r\n\r\n                  setValidity(\r\n                    `${Math.floor(diffMins / 60)} HRS ${diffMins % 60} MIN`\r\n                  )\r\n                }}\r\n                customInput={<ExampleCustomInput />}\r\n              />\r\n            </Box>\r\n          </HStack>\r\n        </Box>\r\n      </Box>\r\n\r\n      <Button\r\n        mt={4}\r\n        rounded='full'\r\n        colorScheme={'orange'}\r\n        onClick={OpenSummary}\r\n      >\r\n        Bid Offer\r\n      </Button>\r\n      <Box>\r\n        <Drawer\r\n          isOpen={showSummary}\r\n          placement='right'\r\n          onClose={() => {\r\n            setShowSummary(false)\r\n          }}\r\n          size={'lg'}\r\n        >\r\n          <DrawerOverlay />\r\n          <DrawerContent>\r\n            <DrawerHeader>\r\n              <HStack spacing={8}>\r\n                <Box\r\n                  fontSize={'3xl'}\r\n                  onClick={() => {\r\n                    setShowSummary(false)\r\n                  }}\r\n                  cursor={'pointer'}\r\n                >\r\n                  <FiArrowLeft />\r\n                </Box>\r\n                <Text fontWeight={'bold'} fontSize={'2xl'}>\r\n                  Your order summary\r\n                </Text>\r\n              </HStack>\r\n            </DrawerHeader>\r\n            <DrawerBody>\r\n              <SimpleGrid columns={6} spacing={8}>\r\n                {summaryKeys.map((key) => {\r\n                  const val = summary[key]\r\n                  if (!val) return null\r\n\r\n                  return (\r\n                    <>\r\n                      <GridItem colSpan={2}>\r\n                        <Text textColor={'gray.500'}>{key}</Text>\r\n                      </GridItem>\r\n                      <GridItem colSpan={4}>\r\n                        <Text fontWeight={'bold'}>{val}</Text>\r\n                      </GridItem>\r\n                    </>\r\n                  )\r\n                })}\r\n              </SimpleGrid>\r\n              <Box mt={4}>\r\n                <Divider />\r\n              </Box>\r\n              <Box mt={4}>\r\n                <HStack>\r\n                  <Text>Price BID</Text>\r\n                  <Spacer />\r\n                  <Text fontSize={'3xl'} fontWeight={'bold'}>\r\n                    ₹ {bidPrice.toLocaleString()} /-PMT\r\n                  </Text>\r\n                </HStack>\r\n              </Box>\r\n              <Box mt={6}>\r\n                <Button\r\n                  fontWeight={'bold'}\r\n                  colorScheme={'orange'}\r\n                  rounded={'full'}\r\n                  w={'full'}\r\n                  textColor={'white'}\r\n                  onClick={props.continue}\r\n                >\r\n                  PLACE YOUR BID\r\n                </Button>\r\n              </Box>\r\n            </DrawerBody>\r\n          </DrawerContent>\r\n        </Drawer>\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default BuyCoalStep1\r\n","import React, { useEffect, useMemo, useState } from 'react'\r\nimport { Box, Heading, HStack, Text, Spacer } from '@chakra-ui/layout'\r\nimport { Button, IconButton } from '@chakra-ui/button'\r\nimport { FiArrowLeft } from 'react-icons/fi'\r\nimport BuyCoalStep1 from '../components/buy-steps/1'\r\nimport { BuyCoalStore } from '../store/BuyCoal'\r\nimport useFetch from 'use-http'\r\nimport { UserStore } from '../store/user'\r\nimport {\r\n  Spinner,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  useDisclosure,\r\n} from '@chakra-ui/react'\r\nimport { Link } from 'react-router-dom'\r\nimport { TrailDataStore } from '../store/TrialData'\r\n\r\nconst BuyCoal: React.FC = () => {\r\n  const [steps, setSteps] = useState({\r\n    current: 1,\r\n    loading: false,\r\n  })\r\n  const { user } = UserStore.useState()\r\n  const trialData = TrailDataStore.useState((s) => s.data)\r\n  const orderApi = useFetch('/api/add/order')\r\n  const buyCoalStore = BuyCoalStore.useState()\r\n  const trialApi = useFetch('/api/listing/trial_data')\r\n  const startTrialApi = useFetch('/api/add/activate_trial')\r\n  const successModal = useDisclosure()\r\n\r\n  const startTrial = () => {\r\n    startTrialApi.post().then((res) => {\r\n      setTimeout(() => {\r\n        window.location.href = '/buy-coal'\r\n      }, 1000)\r\n    })\r\n  }\r\n\r\n  const Continue = () => {\r\n    orderApi.post({ ...buyCoalStore.data }).then((res) => {\r\n      if (res.message === 'Success') {\r\n        successModal.onOpen()\r\n      }\r\n    })\r\n  }\r\n\r\n  const PrevStep = () => {\r\n    setSteps({ ...steps, current: steps.current - 1 })\r\n  }\r\n\r\n  return (\r\n    <Box m='0 auto' maxW='3xl' p={{ base: 6, lg: 0 }}>\r\n      <HStack py={4}>\r\n        <Box\r\n          fontSize={{ base: '2xl', lg: '4xl' }}\r\n          onClick={() => {\r\n            window.history.back()\r\n          }}\r\n          cursor={'pointer'}\r\n        >\r\n          <FiArrowLeft />\r\n        </Box>\r\n        <Box mt={4}>\r\n          <Heading size={'lg'}>Buy Coal</Heading>\r\n        </Box>\r\n      </HStack>\r\n\r\n      <HStack my={4}>\r\n        {steps.current > 1 && (\r\n          <IconButton\r\n            variant='link'\r\n            onClick={PrevStep}\r\n            size='md'\r\n            aria-label='back'\r\n            icon={<FiArrowLeft />}\r\n          />\r\n        )}\r\n        <Text fontSize='md' color='gray'>\r\n          Please select the proper details given below, so that we can match you\r\n          reqirement in given time. Buy coal at best price by selecting the\r\n          proper details given below and enter your BID price.\r\n        </Text>\r\n      </HStack>\r\n\r\n      <Box mb={4}>\r\n        {trialApi.loading ? (\r\n          <Spinner />\r\n        ) : (\r\n          <Box>\r\n            <Box\r\n              d={trialData.paid_member && !trialData.trail ? 'none' : 'block'}\r\n            >\r\n              <HStack\r\n                d={trialData.trial ? 'flex' : 'none'}\r\n                rounded='xl'\r\n                bg={'#ED1C241A'}\r\n                p={4}\r\n              >\r\n                <Box>\r\n                  <Heading size='sm'>\r\n                    {trialData.trial_type === 'activated'\r\n                      ? 'TRIAL ACTIVATED'\r\n                      : trialData.trial_type === 'expired'\r\n                      ? 'TRIAL EXPIRED'\r\n                      : 'ACTIVATE MY TRAIL'}\r\n                  </Heading>\r\n                </Box>\r\n                <Spacer />\r\n                <HStack\r\n                  d={trialData.trial_type === 'expired' ? 'none' : 'flex'}\r\n                >\r\n                  <Text\r\n                    display={trialData.trial_remaining > 0 ? 'flex' : 'none'}\r\n                  >\r\n                    BIDS LEFT: {trialData?.trial_remaining}\r\n                  </Text>\r\n                  <Button\r\n                    display={\r\n                      trialData.trial_type !== 'not activated' ? 'none' : 'flex'\r\n                    }\r\n                    colorScheme={'red'}\r\n                    rounded='full'\r\n                    onClick={startTrial}\r\n                  >\r\n                    ACTIVATE\r\n                  </Button>\r\n                </HStack>\r\n              </HStack>\r\n\r\n              <Box my={4} bg='orange.500' p={4} rounded='xl' color='white'>\r\n                <Heading size='md'>UPGRADE MY ACCOUNT</Heading>\r\n                <Text mt={3}>\r\n                  You are using basic membership, to buy coal, you need to\r\n                  upgrade to premium\r\n                </Text>\r\n                <Box pb={2}>\r\n                  <Link to={'/upgrade'}>\r\n                    <Button color='black' mt={4} size='lg'>\r\n                      UPGRADE NOW\r\n                    </Button>\r\n                  </Link>\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n            {!trialData?.paid_membership_required ||\r\n            user?.paid_membership ||\r\n            trialData?.trial_remaining > 0 ? (\r\n              <>\r\n                <BuyCoalStep1 continue={Continue} />\r\n                {/* <Button\r\n                  mt={4}\r\n                  isLoading={orderApi.loading}\r\n                  rounded='full'\r\n                  colorScheme='brand'\r\n                  onClick={Continue}\r\n                >\r\n                  Bid Offer\r\n                </Button> */}\r\n              </>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n        )}\r\n      </Box>\r\n      <Box>\r\n        <Modal\r\n          isOpen={successModal.isOpen}\r\n          closeOnEsc={false}\r\n          closeOnOverlayClick={false}\r\n          onClose={() => {\r\n            window.location.href = '/orders'\r\n          }}\r\n        >\r\n          <ModalOverlay />\r\n          <ModalContent>\r\n            <ModalHeader>Success</ModalHeader>\r\n            <ModalCloseButton />\r\n            <ModalBody pb={6}>\r\n              <Text>Your bid has been placed successfully</Text>\r\n            </ModalBody>\r\n          </ModalContent>\r\n        </Modal>\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default BuyCoal\r\n","import useFetch from 'use-http'\r\nimport {\r\n  Box,\r\n  Button,\r\n  chakra,\r\n  Heading,\r\n  HStack,\r\n  Image,\r\n  Input,\r\n  Stack,\r\n  Text,\r\n} from '@chakra-ui/react'\r\nimport useRazorpay from 'react-razorpay'\r\nimport { UserStore } from '../store/user'\r\nimport { useEffect, useState } from 'react'\r\nimport { FiArrowLeft } from 'react-icons/fi'\r\n\r\nconst Payment = () => {\r\n  const Razorpay = useRazorpay()\r\n  const [amount, setAmount] = useState<any>('0')\r\n  const [message, setMessage] = useState('')\r\n  const paymentApi = useFetch('/api/add/createorder')\r\n  const paymentVerifyApi = useFetch('/api/add/verifyAndStore')\r\n  const userStore = UserStore.useState()\r\n  const bankApi = useFetch('/api/listing/banks')\r\n  const [banks, setBanks] = useState<any[]>([])\r\n\r\n  const makePayment = () => {\r\n    paymentApi\r\n      .post({\r\n        amountInPaise: amount * 100,\r\n        type: 'deposit',\r\n      })\r\n      .then((data) => {\r\n        if (!data.orderId) return\r\n\r\n        const { orderId } = data\r\n\r\n        const options = {\r\n          key: 'rzp_live_W8oi4FR1FqKtxw', // Enter the Key ID generated from the Dashboard\r\n          amount: amount.toString(),\r\n          currency: 'INR',\r\n          name: 'Anmol India Pvt.LTD.',\r\n          description: 'Anmol India Pvt.LTD.',\r\n          order_id: orderId,\r\n          handler: async function (response: any) {\r\n            paymentVerifyApi\r\n              .post({\r\n                ...response,\r\n                user_id: userStore.data.user.id,\r\n                amount,\r\n                createOrderId: orderId,\r\n                remarks: 'deposit',\r\n              })\r\n              .then((data) => {\r\n                setMessage(data.message)\r\n              })\r\n          },\r\n\r\n          notes: {\r\n            type: 'deposit',\r\n          },\r\n        }\r\n\r\n        const rzp1 = new Razorpay(options)\r\n\r\n        rzp1.on('payment.failed', function (response: any) {\r\n          setMessage(response.description)\r\n        })\r\n\r\n        rzp1.open()\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    bankApi.post().then((res) => {\r\n      setBanks(res.data)\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <Box px={7} py={14}>\r\n      <HStack spacing={6}>\r\n        <Box\r\n          fontSize={{ base: '2xl', lg: '4xl' }}\r\n          cursor={'pointer'}\r\n          onClick={() => {\r\n            window.history.back()\r\n          }}\r\n        >\r\n          <FiArrowLeft />\r\n        </Box>\r\n        <Box>\r\n          <Text fontWeight={'bold'} fontSize={{ base: 'xl', md: '3xl' }}>\r\n            Add Payment\r\n          </Text>\r\n        </Box>\r\n      </HStack>\r\n\r\n      <Box mt={4}>\r\n        <Input\r\n          maxW={'md'}\r\n          onChange={(e) => {\r\n            setAmount(e.target.value)\r\n          }}\r\n          placeholder='Enter Amount'\r\n        />\r\n      </Box>\r\n      <Box mt={6}>\r\n        <HStack>\r\n          <Image w={'15px'} src='/assets/images/info.png' />\r\n          <Text fontSize={{ base: 'sm', md: 'md' }}>\r\n            Amount will be deposited to\r\n            <chakra.span\r\n              fontSize={{ base: 'sm', md: 'lg' }}\r\n              textColor={'#FB8500'}\r\n            >\r\n              {' '}\r\n              Anmol India Pvt. LTD\r\n            </chakra.span>\r\n          </Text>\r\n        </HStack>\r\n      </Box>\r\n      <Box mt={16} px={{ base: 0, md: 32 }}>\r\n        <Button\r\n          w={'xs'}\r\n          colorScheme={'orange'}\r\n          rounded={'full'}\r\n          textColor={'white'}\r\n          onClick={makePayment}\r\n        >\r\n          Add\r\n        </Button>\r\n      </Box>\r\n      <Box mt={8}>\r\n        <HStack>\r\n          <Box bg={'gray.300'} h={'0.4px'} w={'200px'}></Box>\r\n          <Text>OR</Text>\r\n          <Box bg={'gray.300'} h={'0.4px'} w={'200px'}></Box>\r\n        </HStack>\r\n      </Box>\r\n      <Box mt={10}>\r\n        <Heading textTransform={'uppercase'} size={'md'}>\r\n          pay using rtgs\r\n        </Heading>\r\n      </Box>\r\n\r\n      <Stack spacing={4} mt={6}>\r\n        {banks.map((bank, idx) => {\r\n          return (\r\n            <Box key={idx}>\r\n              <Heading size={'md'}>{bank.bank_name}</Heading>\r\n              {bank.bank_details.split('\\n').map((detail: any, idx: number) => {\r\n                return (\r\n                  <Text mt={2} key={idx}>\r\n                    {detail}\r\n                  </Text>\r\n                )\r\n              })}\r\n            </Box>\r\n          )\r\n        })}\r\n      </Stack>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Payment\r\n","import {\r\n  Box,\r\n  Text,\r\n  Stack,\r\n  HStack,\r\n  Spacer,\r\n  Divider,\r\n  Badge,\r\n} from '@chakra-ui/layout'\r\nimport { format } from 'date-fns'\r\nimport { FiChevronRight } from 'react-icons/fi'\r\n\r\ntype Props = {\r\n  active?: any\r\n  orders: any[]\r\n  onChange: (type: string) => void\r\n}\r\n\r\nconst MyOrderSidebar: React.FC<Props> = ({ active, onChange, orders }) => {\r\n  return (\r\n    <Stack spacing={6} maxH='600px' overflow={'auto'}>\r\n      {orders.map((order) => {\r\n        return (\r\n          <>\r\n            <HStack\r\n              cursor={'pointer'}\r\n              p={3}\r\n              borderWidth={active ? '1px' : 0}\r\n              rounded={'lg'}\r\n              borderColor={active === order.order_id ? '#ED1C24' : 'white'}\r\n              bg='#FBF9F9'\r\n              onClick={() => onChange(order)}\r\n            >\r\n              <Box>\r\n                <Text fontWeight={'semibold'} fontSize={'sm'} color='#909090'>\r\n                  #{order.order_id} • {order.order_status}\r\n                </Text>\r\n                <Text color='#909090' mt={2}>\r\n                  Coal Type\r\n                </Text>\r\n                <Text fontSize={'xl'}>{order.coal_name}</Text>\r\n                <Badge rounded='full'>\r\n                  {format(new Date(order.order_time), 'PPP HH:mm')}\r\n                </Badge>\r\n              </Box>\r\n              <Spacer />\r\n              <Box>\r\n                <Text fontSize={'2xl'}>\r\n                  <FiChevronRight />\r\n                </Text>\r\n              </Box>\r\n            </HStack>\r\n            <Divider color='#DEDEDE' />\r\n          </>\r\n        )\r\n      })}\r\n    </Stack>\r\n  )\r\n}\r\n\r\nexport default MyOrderSidebar\r\n","import {\r\n  Drawer,\r\n  DrawerBody,\r\n  DrawerHeader,\r\n  DrawerOverlay,\r\n  DrawerContent,\r\n  DrawerCloseButton,\r\n  HStack,\r\n  Box,\r\n  Text,\r\n  Stack,\r\n  Divider,\r\n} from '@chakra-ui/react'\r\nimport { format } from 'date-fns'\r\n\r\nconst OrderTimeline = ({ isOpen, onClose, remarks = [] }) => {\r\n  return (\r\n    <div>\r\n      <Drawer size='lg' isOpen={isOpen} placement='right' onClose={onClose}>\r\n        <DrawerOverlay />\r\n        <DrawerContent>\r\n          <DrawerCloseButton />\r\n          <DrawerHeader>Timeline</DrawerHeader>\r\n\r\n          <DrawerBody>\r\n            <Stack spacing={4}>\r\n              {remarks?.map((remark: any, index) => (\r\n                <>\r\n                  <HStack alignItems={'flex-start'} spacing={4}>\r\n                    <Box h='40px' w='40px' rounded='full' bg='orange.300' />\r\n                    <Box>\r\n                      <Text fontSize={'xl'} mb={2}>\r\n                        {remark.latest_status}\r\n                      </Text>\r\n                      <p>{remark.remark}</p>\r\n                      <Text fontSize={'sm'} color='gray.400'>\r\n                        {/* {format(new Date(remark.remark_time), 'PPP HH:mm')} */}\r\n                      </Text>\r\n                    </Box>\r\n                  </HStack>\r\n                  {index + 1 < remarks.length && <Divider />}\r\n                </>\r\n              ))}\r\n            </Stack>\r\n          </DrawerBody>\r\n        </DrawerContent>\r\n      </Drawer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OrderTimeline\r\n","import { useEffect, useMemo, useState } from 'react'\r\nimport {\r\n  Box,\r\n  Flex,\r\n  Heading,\r\n  Text,\r\n  Stack,\r\n  Spacer,\r\n  HStack,\r\n  Center,\r\n} from '@chakra-ui/layout'\r\nimport MyOrderSidebar from '../components/my-order/sidebar'\r\nimport useFetch from 'use-http'\r\nimport { FiArrowLeft } from 'react-icons/fi'\r\nimport { format } from 'date-fns'\r\nimport { Button, Spinner, Tag, useDisclosure } from '@chakra-ui/react'\r\nimport OrderTimeline from '../components/my-order/order-timeline'\r\nimport { statusColor } from '../constants/status-colors'\r\n\r\nconst PER_PAGE = 2\r\n\r\nconst MyOrders = (props) => {\r\n  const [active, setActive] = useState<any>({})\r\n  const ordersApi = useFetch('/api/listing/order_summary')\r\n  const orderDetailApi = useFetch('/api/listing/order_details')\r\n\r\n  const [page, setPage] = useState(1)\r\n  const [orders, setOrders] = useState<any[]>([])\r\n  const drawer = useDisclosure()\r\n  const [more, setMore] = useState(true)\r\n\r\n  useEffect(() => {\r\n    const params = new URLSearchParams(props.location.search)\r\n    const orderId = params.get('id')\r\n    const order = orders.find((o) => o.order_id == orderId)\r\n    if (order) {\r\n      setActive(order)\r\n    }\r\n  }, [orders])\r\n\r\n  const loadOrders = () => {\r\n    ordersApi\r\n      .post({\r\n        page,\r\n      })\r\n      .then((res) => {\r\n        if (!res?.data) return\r\n        const { data } = res\r\n        setOrders([...orders, ...res.data])\r\n\r\n        if (data.length < PER_PAGE) setMore(false)\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadOrders()\r\n  }, [page])\r\n\r\n  const remarkData = useMemo(\r\n    () => (active?.remarks?.length > 0 ? active?.remarks[0] : null),\r\n    [active?.remarks]\r\n  )\r\n\r\n  const { condition_details } = active\r\n\r\n  const conditionKeys = useMemo(\r\n    () => Object.keys(active?.condition_details || {}),\r\n    [active?.condition_details]\r\n  )\r\n\r\n  const status = useMemo(\r\n    () =>\r\n      statusColor[active?.order_status]\r\n        ? statusColor[active?.order_status]\r\n        : [],\r\n    [active?.order_status]\r\n  )\r\n\r\n  const textColor = status[0]\r\n  const backgroundColor = status[1]\r\n\r\n  return (\r\n    <Box px={12} mt={10}>\r\n      <HStack>\r\n        <Text\r\n          fontSize={{ base: '2xl', lg: '4xl' }}\r\n          onClick={() => {\r\n            window.history.back()\r\n          }}\r\n          cursor={'pointer'}\r\n        >\r\n          <FiArrowLeft />\r\n        </Text>\r\n        <Heading size='lg'>My Orders</Heading>\r\n      </HStack>\r\n      <Flex mt={12}>\r\n        <Box w='xl' d={{ base: active.id ? 'none' : 'block', lg: 'block' }}>\r\n          <MyOrderSidebar\r\n            orders={orders}\r\n            active={active.order_id}\r\n            onChange={(o: any) => {\r\n              orderDetailApi\r\n                .post({\r\n                  id: o.id,\r\n                })\r\n                .then((res) => {\r\n                  setActive(res.data)\r\n                })\r\n            }}\r\n          />\r\n          <Box py={8}>\r\n            <Button\r\n              onClick={() => {\r\n                setPage(page + 1)\r\n              }}\r\n              isDisabled={!more}\r\n            >\r\n              Load more\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n        <Stack\r\n          p={{ base: 0, lg: 4 }}\r\n          bg='#F8F8F8'\r\n          ml={{ base: 0, lg: 4 }}\r\n          w={{ base: 'full', lg: 'full' }}\r\n          mt={{ base: 0, md: 0 }}\r\n          py={{ base: 8, lg: 12 }}\r\n          rounded='lg'\r\n          d={{ base: active.id ? 'flex' : 'none', lg: 'flex' }}\r\n        >\r\n          <Box\r\n            fontSize={'2xl'}\r\n            onClick={() => {\r\n              setActive({})\r\n            }}\r\n            cursor={'pointer'}\r\n            d={{ base: 'block', lg: 'none' }}\r\n          >\r\n            <FiArrowLeft />\r\n          </Box>\r\n          {orderDetailApi.loading ? (\r\n            <Center>\r\n              <Spinner />\r\n            </Center>\r\n          ) : (\r\n            active.order_id && (\r\n              <Stack bg='white' rounded='xl' spacing={0}>\r\n                <Box\r\n                  p={4}\r\n                  roundedTop='lg'\r\n                  borderWidth={'1px'}\r\n                  borderColor={'#DEDEDE'}\r\n                >\r\n                  <HStack>\r\n                    <Text color='#909090' fontWeight={'semibold'}>\r\n                      #{active.order_id}\r\n                    </Text>\r\n                    <Spacer />\r\n                    <Text>\r\n                      Status:\r\n                      <Tag\r\n                        ml={2}\r\n                        bg={backgroundColor}\r\n                        textColor={textColor}\r\n                        rounded='full'\r\n                      >\r\n                        {active.order_status}\r\n                      </Tag>\r\n                      {status[2] && (\r\n                        <Tag\r\n                          rounded='full'\r\n                          bg={status[1]}\r\n                          textTransform='uppercase'\r\n                          textColor={status[0]}\r\n                        >\r\n                          {status[2]}\r\n                        </Tag>\r\n                      )}\r\n                    </Text>\r\n                  </HStack>\r\n                  <Text\r\n                    mt={4}\r\n                    cursor={'pointer'}\r\n                    color='#FB8500'\r\n                    onClick={drawer.onOpen}\r\n                  >\r\n                    VIEW ORDER TIMELINE\r\n                  </Text>\r\n                  {remarkData && (\r\n                    <Box mt={4}>\r\n                      <Text color='#909090'>REMARKS</Text>\r\n                      <Text>{remarkData.remark}</Text>\r\n                      <Text fontSize={'sm'} color='#909090'>\r\n                        {format(new Date(remarkData.remark_time), 'PPP HH:mm')}\r\n                      </Text>\r\n                    </Box>\r\n                  )}\r\n                </Box>\r\n                <Stack\r\n                  p={4}\r\n                  spacing={4}\r\n                  roundedBottom='lg'\r\n                  borderWidth={'1px'}\r\n                  borderColor={'#DEDEDE'}\r\n                >\r\n                  <Box>\r\n                    <Text color='#909090'>Order Date</Text>\r\n                    <Text>\r\n                      {format(new Date(active.order_time), 'PPP HH:mm')}\r\n                    </Text>\r\n                  </Box>\r\n\r\n                  <Box>\r\n                    <Text color='#909090'>Coal Type</Text>\r\n                    <Text>{active.coal_name}</Text>\r\n                  </Box>\r\n\r\n                  <Box>\r\n                    <Text color='#909090'>Port Name</Text>\r\n                    <Text>{active.port_name}</Text>\r\n                  </Box>\r\n\r\n                  <Box>\r\n                    <Text color='#909090'>Vessel Name</Text>\r\n                    <Text>{active.vessel_name}</Text>\r\n                  </Box>\r\n                  {conditionKeys.map((key) => {\r\n                    if (condition_details[key] !== null) {\r\n                      const value = condition_details[key]\r\n                      if (value.length > 1)\r\n                        return (\r\n                          <Box>\r\n                            <Text textTransform={'capitalize'} color='#909090'>\r\n                              {key.replace(/\\_/g, ' ')}\r\n                            </Text>\r\n                            <Text>{value}</Text>\r\n                          </Box>\r\n                        )\r\n                    }\r\n                  })}\r\n                  <Box>\r\n                    <Text color='#909090'>Quantity</Text>\r\n                    <Text>\r\n                      {active.quantity} {active.unit}\r\n                    </Text>\r\n                  </Box>\r\n                  <Box>\r\n                    <Text color='#909090'>Validity</Text>\r\n                    <Text>{format(new Date(active.expiry), 'PPP HH:mm')}</Text>\r\n                  </Box>\r\n                  <Box>\r\n                    <Text color='#909090'>Bid Price</Text>\r\n                    <Text fontSize={'xl'} fontWeight='semibold'>\r\n                      ₹{Number(active.bid_price).toLocaleString()} - PMT\r\n                    </Text>\r\n                    <Text mb={4} color='#909090' fontSize={'sm'}>\r\n                      Rs. {Number(active.bid_price - 400).toLocaleString()} PMT\r\n                      + 5% + Rs. 400 PMT\r\n                    </Text>\r\n                  </Box>\r\n                </Stack>\r\n              </Stack>\r\n            )\r\n          )}\r\n        </Stack>\r\n      </Flex>\r\n\r\n      <OrderTimeline remarks={active.remarks} {...drawer} />\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default MyOrders\r\n","import React, { useEffect, useState } from 'react'\r\nimport {\r\n  Box,\r\n  Heading,\r\n  HStack,\r\n  Radio,\r\n  RadioGroup,\r\n  Stack,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Button,\r\n  Text,\r\n  Flex,\r\n} from '@chakra-ui/react'\r\nimport { useForm } from 'react-hook-form'\r\nimport { FiPlus, FiX } from 'react-icons/fi'\r\nimport useFetch from 'use-http'\r\n\r\nconst Register: React.FC = () => {\r\n  const [userType, setUserType] = useState('')\r\n  const [companies, setCompanies] = useState<any>([\r\n    {\r\n      name: '',\r\n      gstno: '',\r\n    },\r\n  ])\r\n  const registerApi = useFetch('/login/register')\r\n  const { register, handleSubmit } = useForm()\r\n  const favCoalApi = useFetch('/api/listing/fav_coal')\r\n  const [favCoals, setFavCoals] = useState([])\r\n  const [selectedfavCoal, setSelectedfavCoal] = useState<String[]>([])\r\n\r\n  useEffect(() => {\r\n    favCoalApi.post().then((res) => {\r\n      setFavCoals(res.data)\r\n    })\r\n  }, [])\r\n\r\n  const onSubmit = (data: any) => {\r\n    registerApi\r\n      .post({\r\n        user_type: userType,\r\n        companies,\r\n        name: data.f_name + ' ' + data.l_name,\r\n      })\r\n      .then((data) => {\r\n        if (data.message === 'Success') {\r\n          window.location.href = '/'\r\n        }\r\n      })\r\n  }\r\n\r\n  return (\r\n    <Box py={10} maxW='xl' m='0 auto'>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <Heading size={'lg'} fontWeight={'normal'} textAlign={'center'}>\r\n          Complete your registration process\r\n        </Heading>\r\n        <Stack mt={8} spacing={6}>\r\n          <FormControl as='fieldset'>\r\n            <FormLabel as='legend' fontWeight={'bold'}>\r\n              Select type of user\r\n            </FormLabel>\r\n            <RadioGroup\r\n              onChange={(e) => {\r\n                setUserType(e)\r\n              }}\r\n              pb={6}\r\n            >\r\n              <HStack spacing='24px'>\r\n                <Radio value='end_user'>End user</Radio>\r\n                <Radio value='trader'>Trader</Radio>\r\n                <Radio value='both'>Both</Radio>\r\n              </HStack>\r\n            </RadioGroup>\r\n          </FormControl>\r\n\r\n          <FormControl>\r\n            <Input {...register('f_name')} placeholder='First Name' />\r\n          </FormControl>\r\n          <FormControl>\r\n            <Input {...register('l_name')} placeholder='Last Name' />\r\n          </FormControl>\r\n\r\n          <FormControl>\r\n            <Stack spacing={2} mt={2}>\r\n              {companies.map((company: any, index: number) => (\r\n                <HStack key={index}>\r\n                  <Input\r\n                    placeholder='Company Name'\r\n                    value={company.name}\r\n                    onChange={(e) => {\r\n                      const _companies = [...companies]\r\n                      _companies[index] = {\r\n                        ...companies[index],\r\n                        name: e.target.value,\r\n                      }\r\n                      setCompanies(_companies)\r\n                    }}\r\n                  />\r\n                  <Input\r\n                    placeholder='GST No.'\r\n                    value={company.gstno}\r\n                    onChange={(e) => {\r\n                      const _companies = [...companies]\r\n                      _companies[index] = {\r\n                        ...companies[index],\r\n                        gstno: e.target.value,\r\n                      }\r\n                      setCompanies(_companies)\r\n                    }}\r\n                  />\r\n                  <FiX\r\n                    size={24}\r\n                    onClick={() => {\r\n                      const f = companies.filter(\r\n                        (c: any, i: number) => i !== index\r\n                      )\r\n                      setCompanies(f)\r\n                    }}\r\n                  />\r\n                </HStack>\r\n              ))}\r\n            </Stack>\r\n\r\n            <Button\r\n              mt={8}\r\n              leftIcon={<FiPlus />}\r\n              onClick={() => {\r\n                setCompanies([...companies, { name: '', gst: '' }])\r\n              }}\r\n            >\r\n              Add more\r\n            </Button>\r\n\r\n            <Text mt={10}>Preferred Coal Types</Text>\r\n\r\n            <Flex flexWrap={'wrap'}>\r\n              {favCoals.map((favCoal: any, index: number) => (\r\n                <Box\r\n                  p={2}\r\n                  mt={2}\r\n                  mr={2}\r\n                  key={index}\r\n                  cursor={'pointer'}\r\n                  borderWidth={\r\n                    selectedfavCoal.includes(favCoal._id) ? '2px' : '1px'\r\n                  }\r\n                  rounded='lg'\r\n                  borderColor={\r\n                    selectedfavCoal.includes(favCoal._id)\r\n                      ? 'red.400'\r\n                      : 'gray.300'\r\n                  }\r\n                  onClick={() => {\r\n                    if (selectedfavCoal.includes(favCoal._id)) {\r\n                      const _selectedfavCoal = selectedfavCoal.filter(\r\n                        (c: any) => c !== favCoal._id\r\n                      )\r\n\r\n                      setSelectedfavCoal(_selectedfavCoal)\r\n                    } else {\r\n                      setSelectedfavCoal([...selectedfavCoal, favCoal._id])\r\n                    }\r\n                  }}\r\n                >\r\n                  {favCoal.coal}\r\n                </Box>\r\n              ))}\r\n            </Flex>\r\n          </FormControl>\r\n          <FormControl>\r\n            <Button type='submit' colorScheme={'orange'}>\r\n              Create Account\r\n            </Button>\r\n          </FormControl>\r\n        </Stack>\r\n      </form>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Register\r\n","import React, { useEffect, useState } from 'react'\r\nimport {\r\n  Box,\r\n  Heading,\r\n  HStack,\r\n  Spacer,\r\n  Button,\r\n  Text,\r\n  Center,\r\n} from '@chakra-ui/react'\r\nimport { Table, Thead, Tbody, Tag, Tr, Th, Td } from '@chakra-ui/react'\r\nimport useFetch from 'use-http'\r\nimport { format } from 'date-fns'\r\nimport { FiArrowLeft } from 'react-icons/fi'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst STATUS: any = {\r\n  failure: {\r\n    bg: '#FDE5E6',\r\n    text: '#DB262D',\r\n  },\r\n  success: {\r\n    bg: '#CDF8D9',\r\n    text: '#259645',\r\n  },\r\n}\r\n\r\nfunction Transaction() {\r\n  const api = useFetch('/api/listing/payment_history')\r\n  const [transactions, setTransactions] = useState<any[]>([])\r\n  const [page, setPage] = useState(1)\r\n\r\n  useEffect(() => {\r\n    api.post({ page }).then((data) => {\r\n      setTransactions([...transactions, ...data.data])\r\n    })\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [page])\r\n\r\n  if (transactions.length === 0) {\r\n    return (\r\n      <Center py={8}>\r\n        <Text fontWeight={'bold'}>No Transactions</Text>\r\n      </Center>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Box p={8}>\r\n      <HStack>\r\n        <Text fontSize={{ base: '2xl', md: '4xl' }}>\r\n          <FiArrowLeft />\r\n        </Text>\r\n\r\n        <Text fontWeight={'bold'} fontSize={{ base: 'md', md: '3xl' }}>\r\n          Transaction History\r\n        </Text>\r\n        <Spacer />\r\n        <Link to={'/payments'}>\r\n          <Button colorScheme={'orange'} rounded='full'>\r\n            Add Payment\r\n          </Button>\r\n        </Link>\r\n      </HStack>\r\n      <Table\r\n        overflow={'auto'}\r\n        minW={'400px'}\r\n        mt={24}\r\n        variant='simple'\r\n        cellPadding={12}\r\n      >\r\n        <Thead>\r\n          <Tr>\r\n            <Th>DATE</Th>\r\n            <Th>NARRATION</Th>\r\n            <Th>AMOUNT</Th>\r\n            <Th>STATUS</Th>\r\n          </Tr>\r\n        </Thead>\r\n        <Tbody>\r\n          {transactions.map((transaction: any) => {\r\n            const { transaction_type } = transaction\r\n            const _status = STATUS[transaction_type]\r\n            return (\r\n              <Tr>\r\n                <Td>{format(new Date(transaction.transaction_date), 'PPP')}</Td>\r\n                <Td>{transaction.remarks}</Td>\r\n                <Td>\r\n                  <b>₹{transaction.amount / 100}</b>\r\n                </Td>\r\n                <Td>\r\n                  <Tag\r\n                    color={_status ? _status['text'] : ''}\r\n                    bg={_status ? _status['bg'] : ''}\r\n                  >\r\n                    {transaction_type}\r\n                  </Tag>\r\n                </Td>\r\n              </Tr>\r\n            )\r\n          })}\r\n        </Tbody>\r\n      </Table>\r\n      <Button\r\n        onClick={() => {\r\n          setPage(page + 1)\r\n        }}\r\n        mt={4}\r\n      >\r\n        Load more\r\n      </Button>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Transaction\r\n","import { Heading, Text, Box, HStack } from '@chakra-ui/react'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { FiArrowLeft } from 'react-icons/fi'\r\nimport useFetch from 'use-http'\r\n\r\nfunction Bank() {\r\n  const bankApi = useFetch('/api/listing/banks')\r\n  const subscriptionFeesApi = useFetch('/api/listing/subscription_fees')\r\n  const [banks, setBanks] = useState<any[]>([])\r\n  const [subscriptionFees, setSubscriptionFees] = useState<any>('')\r\n\r\n  useEffect(() => {\r\n    bankApi.post().then((res) => {\r\n      setBanks(res.data)\r\n    })\r\n\r\n    subscriptionFeesApi.post().then((res) => {\r\n      setSubscriptionFees(res.data)\r\n      // console.log(res.data)\r\n    })\r\n  }, [])\r\n  return (\r\n    <Box m={'0 auto'} maxW={'4xl'} mt={8} px={{ base: 8, lg: 2 }}>\r\n      <HStack spacing={6}>\r\n        <Box\r\n          fontSize={{ base: '2xl', lg: '4xl' }}\r\n          onClick={() => {\r\n            window.history.back()\r\n          }}\r\n          cursor={'pointer'}\r\n        >\r\n          <FiArrowLeft />\r\n        </Box>\r\n        <Heading size={'lg'}>Bank Details</Heading>\r\n      </HStack>\r\n      <Box>\r\n        <Heading mt={8} textTransform={'uppercase'} size={'md'}>\r\n          Pay security amount offline using rtgs/neft\r\n        </Heading>\r\n      </Box>\r\n      <Text fontSize={'2xl'} mt={6} textColor={'gray.600'}>\r\n        SECURITY AMOUNT\r\n      </Text>\r\n      <Text textColor={'gray.800'} fontSize={'2xl'}>\r\n        ₹ {subscriptionFees}\r\n      </Text>\r\n\r\n      {banks.map((bnk, idx) => {\r\n        return (\r\n          <Box key={idx} pb={10} mt={4}>\r\n            <Heading size={'xl'}>{bnk.bank_name}</Heading>\r\n\r\n            {bnk.bank_details.split('\\n').map((line, idx) => {\r\n              return (\r\n                <Text mt={2} key={idx}>\r\n                  {line}\r\n                </Text>\r\n              )\r\n            })}\r\n          </Box>\r\n        )\r\n      })}\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Bank\r\n","import {\r\n  Box,\r\n  Center,\r\n  Heading,\r\n  HStack,\r\n  Spinner,\r\n  Stack,\r\n  Text,\r\n} from '@chakra-ui/react'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { FiArrowLeft } from 'react-icons/fi'\r\nimport useFetch from 'use-http'\r\n\r\nconst Contact = () => {\r\n  const [contact, setContact] = useState<any[]>([])\r\n  const contactApi = useFetch('/api/listing/contact')\r\n\r\n  useEffect(() => {\r\n    contactApi.post().then((res) => {\r\n      setContact(res.data)\r\n      // console.log('contact data', res.data)\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <Box px={7} py={14}>\r\n      <HStack mb={6}>\r\n        <Text\r\n          fontSize={{ base: '2xl', lg: '4xl' }}\r\n          onClick={() => {\r\n            window.history.back()\r\n          }}\r\n          cursor={'pointer'}\r\n        >\r\n          <FiArrowLeft />\r\n        </Text>\r\n\r\n        <Heading size={'lg'}>Contact us</Heading>\r\n      </HStack>\r\n\r\n      {contactApi.loading ? (\r\n        <Center>\r\n          <Spinner mt={6} />\r\n        </Center>\r\n      ) : (\r\n        contact.map((contact, idx) => (\r\n          <Box key={idx} mb={6}>\r\n            <Heading size='md'>{contact.type}</Heading>\r\n            <Stack mt={4} space={3}>\r\n              {Object.keys(contact.details).map((key, idx) => (\r\n                <Box key={idx}>\r\n                  <Text\r\n                    color='brand.400'\r\n                    fontWeight='semibold'\r\n                    textTransform={'capitalize'}\r\n                  >\r\n                    {key}\r\n                  </Text>\r\n                  <Text\r\n                    cursor={'pointer'}\r\n                    onClick={() => {\r\n                      const protocol = key.includes('email')\r\n                        ? 'mailto'\r\n                        : key.includes('phone') || key.includes('mobile')\r\n                        ? 'tel'\r\n                        : ''\r\n                      if (protocol)\r\n                        window.open(`${protocol}:${contact.details[key]}`)\r\n                    }}\r\n                  >\r\n                    {contact.details[key]}\r\n                  </Text>\r\n                </Box>\r\n              ))}\r\n            </Stack>\r\n          </Box>\r\n        ))\r\n      )}\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Contact\r\n","import useFetch from 'use-http'\r\nimport {\r\n  Box,\r\n  Button,\r\n  ButtonGroup,\r\n  Heading,\r\n  HStack,\r\n  Spacer,\r\n  Stack,\r\n  Text,\r\n} from '@chakra-ui/react'\r\nimport useRazorpay from 'react-razorpay'\r\nimport { UserStore } from '../store/user'\r\nimport { useEffect, useState } from 'react'\r\nimport { FiArrowLeft, FiCheck } from 'react-icons/fi'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst BENIFITS = {\r\n  '1': 'You will be able to access our BUY COAL feature to purchase coal online transparently.',\r\n  '2': 'You will be able to bid your own price at which you want to buy coal.',\r\n  '3': 'You will be able to access real time Market Price. You will also know what conditions are applicable on what market price.',\r\n  '4': 'The Security Money is fully refundable subject to terms and conditions.',\r\n}\r\n\r\nconst Upgrade = () => {\r\n  const Razorpay = useRazorpay()\r\n  const [message, setMessage] = useState('')\r\n  const listingApi = useFetch('/api/listing')\r\n  const subscriptionFeesApi = useFetch('/api/listing/subscription_fees')\r\n\r\n  const paymentApi = useFetch('/api/add/createorder')\r\n  const paymentVerifyApi = useFetch('/api/add/verifyAndStore')\r\n  const userStore = UserStore.useState()\r\n  const [lastPointMessage, setLastPointMessage] = useState('')\r\n  const [amount, setAmount] = useState<any>('')\r\n\r\n  const fetchAmount = () => {\r\n    subscriptionFeesApi.post().then((res) => {\r\n      setAmount(res.data)\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchAmount()\r\n    listingApi.post('upgrade_english_message').then((res) => {\r\n      setLastPointMessage(res.data)\r\n    })\r\n  }, [])\r\n\r\n  const createPayment = () => {\r\n    paymentApi\r\n      .post({\r\n        amountInPaise: amount * 100,\r\n        type: 'upgrade',\r\n      })\r\n\r\n      .then((data) => {\r\n        if (!data.orderId) return\r\n\r\n        const { orderId } = data\r\n        // console.log('data', data)\r\n        const options = {\r\n          key: 'rzp_live_W8oi4FR1FqKtxw', // Enter the Key ID generated from the Dashboard\r\n          amount: amount.toString(),\r\n          currency: 'INR',\r\n          name: 'Anmol India LTD.',\r\n          description: 'Anmol India LTD.',\r\n          order_id: orderId,\r\n          handler: async function (response: any) {\r\n            console.log('response', response)\r\n            paymentVerifyApi\r\n              .post({\r\n                ...response,\r\n                user_id: userStore.data.user.id,\r\n                amount,\r\n                createOrderId: orderId,\r\n                remarks: 'upgrade',\r\n              })\r\n              .then((data) => {\r\n                setMessage(data.message)\r\n              })\r\n          },\r\n\r\n          notes: {\r\n            type: 'upgrade',\r\n          },\r\n        }\r\n\r\n        const rzp1 = new Razorpay(options)\r\n\r\n        rzp1.on('payment.failed', function (response: any) {\r\n          console.log('response', response)\r\n          setMessage(response.description)\r\n        })\r\n\r\n        rzp1.open()\r\n      })\r\n  }\r\n  return (\r\n    <Box>\r\n      <Box maxW={'4xl'} m={'0 auto'} px={{ base: 8, lg: 0 }}>\r\n        <HStack py={6}>\r\n          <Box\r\n            fontSize={{ base: '2xl', lg: '4xl' }}\r\n            onClick={() => {\r\n              window.history.back()\r\n            }}\r\n            cursor={'pointer'}\r\n          >\r\n            <FiArrowLeft />\r\n          </Box>\r\n\r\n          <Heading size={'lg'}>Upgrade</Heading>\r\n        </HStack>\r\n        <Text color={'gray.500'} fontSize={{ base: 'xl', lg: 'xl' }}>\r\n          By depositing the security money, you can upgrade your membership for\r\n          free.\r\n        </Text>\r\n        <Text\r\n          fontSize={{ base: 'xl', lg: 'xl' }}\r\n          mt={6}\r\n          fontWeight='semibold'\r\n          textColor={'gray.400'}\r\n        >\r\n          PRICING\r\n        </Text>\r\n        <Text mt={6} fontSize={'2xl'} fontWeight='semibold'>\r\n          ₹{Number(amount).toLocaleString()}\r\n        </Text>\r\n\r\n        <Text\r\n          mb={2}\r\n          fontSize={'md'}\r\n          mt={6}\r\n          fontWeight='semibold'\r\n          textColor={'gray.400'}\r\n        >\r\n          BENIFITS\r\n        </Text>\r\n        <Stack spacing={3} mt={4}>\r\n          {Object.keys(BENIFITS).map((key) => {\r\n            const val = BENIFITS[key]\r\n            return (\r\n              <HStack alignItems={'flex-start'} spacing={4}>\r\n                <Box fontSize={'xl'} color='green.400'>\r\n                  <FiCheck />\r\n                </Box>\r\n                <Text fontSize={'lg'}>{val}</Text>\r\n              </HStack>\r\n            )\r\n          })}\r\n        </Stack>\r\n        <Box mt={4}>\r\n          <HStack alignItems={'flex-start'} spacing={4}>\r\n            <Box fontSize={'xl'} color='green.400'>\r\n              <FiCheck />\r\n            </Box>\r\n            <Text fontSize={'lg'}>{lastPointMessage}</Text>\r\n          </HStack>\r\n        </Box>\r\n        <ButtonGroup pb={10}>\r\n          <Button\r\n            mt={8}\r\n            colorScheme={'orange'}\r\n            rounded='full'\r\n            onClick={createPayment}\r\n          >\r\n            Upgrade Now\r\n          </Button>\r\n          <Link to={'/banks'}>\r\n            <Button mt={8} colorScheme={'orange'} rounded='full'>\r\n              Bank Details\r\n            </Button>\r\n          </Link>\r\n        </ButtonGroup>\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Upgrade\r\n","import {\r\n  Box,\r\n  Button,\r\n  Heading,\r\n  HStack,\r\n  Spacer,\r\n  Drawer,\r\n  DrawerBody,\r\n  FormControl,\r\n  FormLabel,\r\n  DrawerHeader,\r\n  DrawerOverlay,\r\n  DrawerContent,\r\n  useDisclosure,\r\n  Input,\r\n  Text,\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Center,\r\n  Stack,\r\n  Divider,\r\n} from '@chakra-ui/react'\r\nimport React, { useState } from 'react'\r\nimport { FiArrowLeft, FiEdit, FiPlus, FiTrash } from 'react-icons/fi'\r\nimport useFetch from 'use-http'\r\nimport { UserStore } from '../store/user'\r\n\r\nfunction Companies() {\r\n  const companyDrawer = useDisclosure()\r\n  const { user } = UserStore.useState()\r\n  const api = useFetch('/api/add/request_company_details_change')\r\n  const addApi = useFetch('/api/add/company')\r\n  const [alert, setAlert] = useState({\r\n    visible: false,\r\n    message: '',\r\n  })\r\n\r\n  const [newCompany, setNewCompany] = useState({\r\n    name: '',\r\n    gst: '',\r\n    entry: false,\r\n  })\r\n\r\n  const confirmAdd = () => {\r\n    addApi\r\n      .post({\r\n        company_name: newCompany.name,\r\n        gst_no: newCompany.gst,\r\n      })\r\n      .then((res) => {\r\n        if (res.message === 'Success') {\r\n          setNewCompany({\r\n            name: '',\r\n            gst: '',\r\n            entry: false,\r\n          })\r\n        }\r\n        companyDrawer.onClose()\r\n        setTimeout(() => {\r\n          window.location.reload()\r\n        }, 800)\r\n      })\r\n  }\r\n\r\n  const editRemove = (id: string, type: string) => {\r\n    api\r\n      .post({\r\n        company_id: id,\r\n        request_type: type,\r\n      })\r\n      .then((res) => {\r\n        if (res.message === 'Success') {\r\n          setAlert({\r\n            visible: true,\r\n            message: 'Request sent successfully',\r\n          })\r\n        } else {\r\n          setAlert({\r\n            visible: true,\r\n            message: 'Request already pending',\r\n          })\r\n        }\r\n      })\r\n  }\r\n\r\n  return (\r\n    <Box px={6} py={6}>\r\n      <HStack>\r\n        <Box\r\n          fontSize={{ base: '3xl', md: '4xl' }}\r\n          onClick={() => {\r\n            window.history.back()\r\n          }}\r\n          cursor={'pointer'}\r\n        >\r\n          <FiArrowLeft />\r\n        </Box>\r\n        <Text fontWeight={'bold'} fontSize={{ base: 'xl', md: '3xl' }}>\r\n          Companies\r\n        </Text>\r\n        <Spacer />\r\n        <Box>\r\n          <Button\r\n            fontWeight={'bold'}\r\n            rounded={'full'}\r\n            fontSize={{ base: 'xs', md: 'lg' }}\r\n            leftIcon={<FiPlus />}\r\n            colorScheme={'orange'}\r\n            textColor={'white'}\r\n            onClick={() => {\r\n              companyDrawer.onOpen()\r\n            }}\r\n          >\r\n            ADD COMPANY\r\n          </Button>\r\n        </Box>\r\n      </HStack>\r\n      <Box mt={8} d={{ base: 'none', lg: 'flex' }}>\r\n        <Table size={'lg'} variant='simple'>\r\n          <Thead>\r\n            <Tr>\r\n              <Th>Name</Th>\r\n              <Th>GST</Th>\r\n              <Th isNumeric></Th>\r\n            </Tr>\r\n          </Thead>\r\n          <Tbody>\r\n            {user?.companies.map((company: any, idx: number) => {\r\n              return (\r\n                <Tr key={idx} mt={8}>\r\n                  <Td fontSize={'xl'}>{company.company_name}</Td>\r\n                  <Td fontSize={'xl'}>{company.gst_no}</Td>\r\n\r\n                  <Td cursor={'pointer'} isNumeric>\r\n                    <HStack spacing={6}>\r\n                      <Button\r\n                        variant={'link'}\r\n                        leftIcon={<FiEdit />}\r\n                        colorScheme={'blue'}\r\n                        onClick={() => {\r\n                          editRemove(company._id, 'Edit')\r\n                        }}\r\n                      >\r\n                        Edit\r\n                      </Button>\r\n                      <Button\r\n                        variant={'link'}\r\n                        colorScheme={'orange'}\r\n                        leftIcon={<FiTrash />}\r\n                        onClick={() => {\r\n                          editRemove(company._id, 'Delete')\r\n                        }}\r\n                      >\r\n                        Delete\r\n                      </Button>\r\n                    </HStack>\r\n                  </Td>\r\n                </Tr>\r\n              )\r\n            })}\r\n          </Tbody>\r\n        </Table>\r\n      </Box>\r\n      <Box mt={8} d={{ base: 'block', lg: 'none' }}>\r\n        <Box>\r\n          <Stack spacing={5}>\r\n            {user?.companies.map((company: any, idx: number) => {\r\n              return (\r\n                <>\r\n                  <HStack key={idx}>\r\n                    <Box>\r\n                      <Text fontSize={'xs'}>GST NO: {company.gst_no}</Text>\r\n                      <Text fontWeight={'bold'} fontSize={'xs'}>\r\n                        {company.company_name}\r\n                      </Text>\r\n                    </Box>\r\n                    <Spacer />\r\n                    <HStack spacing={2}>\r\n                      <Button\r\n                        variant={'link'}\r\n                        onClick={() => {\r\n                          editRemove(company._id, 'Edit')\r\n                        }}\r\n                        colorScheme={'blue'}\r\n                        leftIcon={<FiEdit />}\r\n                        size={'sm'}\r\n                      >\r\n                        Edit\r\n                      </Button>\r\n                      <Button\r\n                        variant={'link'}\r\n                        onClick={() => {\r\n                          editRemove(company._id, 'Delete')\r\n                        }}\r\n                        size={'sm'}\r\n                        colorScheme={'orange'}\r\n                        leftIcon={<FiTrash />}\r\n                      >\r\n                        Delete\r\n                      </Button>\r\n                    </HStack>\r\n                  </HStack>\r\n                  <Divider />\r\n                </>\r\n              )\r\n            })}\r\n          </Stack>\r\n        </Box>\r\n      </Box>\r\n      <Box>\r\n        <Drawer\r\n          isOpen={companyDrawer.isOpen}\r\n          placement='right'\r\n          onClose={companyDrawer.onClose}\r\n          size={'md'}\r\n        >\r\n          <DrawerOverlay />\r\n          <DrawerContent>\r\n            <DrawerHeader>\r\n              <HStack spacing={6}>\r\n                <Box\r\n                  fontSize={{ base: '2xl', lg: '4xl' }}\r\n                  onClick={companyDrawer.onClose}\r\n                  cursor={'pointer'}\r\n                >\r\n                  <FiArrowLeft />\r\n                </Box>\r\n                <Heading size='md'>Add Company</Heading>\r\n              </HStack>\r\n            </DrawerHeader>\r\n\r\n            <DrawerBody>\r\n              <FormControl>\r\n                <FormLabel>Enter company name</FormLabel>\r\n                <Input\r\n                  onChange={(e) => {\r\n                    setNewCompany({ ...newCompany, name: e.target.value })\r\n                  }}\r\n                />\r\n              </FormControl>\r\n              <FormControl mt={6}>\r\n                <FormLabel>Enter GST Number</FormLabel>\r\n                <Input\r\n                  onChange={(e) => {\r\n                    setNewCompany({ ...newCompany, gst: e.target.value })\r\n                  }}\r\n                />\r\n              </FormControl>\r\n              <Box mt={12}>\r\n                <Button\r\n                  textColor={'white'}\r\n                  fontWeight={'bold'}\r\n                  rounded={'full'}\r\n                  w={{ base: '50%', md: 'full' }}\r\n                  colorScheme={'orange'}\r\n                  onClick={confirmAdd}\r\n                >\r\n                  ADD\r\n                </Button>\r\n              </Box>\r\n            </DrawerBody>\r\n          </DrawerContent>\r\n        </Drawer>\r\n      </Box>\r\n      <Box>\r\n        <Modal\r\n          isOpen={alert.visible}\r\n          onClose={() => {\r\n            setAlert({ ...alert, visible: false })\r\n          }}\r\n        >\r\n          <ModalOverlay />\r\n          <ModalContent>\r\n            <ModalHeader>Alert</ModalHeader>\r\n            <ModalCloseButton />\r\n            <ModalBody>\r\n              <Text>{alert.message}</Text>\r\n              <Center>\r\n                <Box mt={4}>\r\n                  <Button\r\n                    onClick={() => {\r\n                      setAlert({ ...alert, visible: false })\r\n                    }}\r\n                    colorScheme={'red'}\r\n                  >\r\n                    Confirm\r\n                  </Button>\r\n                </Box>\r\n              </Center>\r\n            </ModalBody>\r\n          </ModalContent>\r\n        </Modal>\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Companies\r\n","import React, { useEffect } from 'react'\r\nimport { Box, Center, Heading, Spinner, Text } from '@chakra-ui/react'\r\nimport OpenDeeplink from '../components/OpenDeeplink'\r\n\r\nconst FetchApp = () => {\r\n  const isAndroid = navigator.userAgent.includes('Android')\r\n\r\n  const myInitialURL = window.location.pathname\r\n  const downloadLink = isAndroid\r\n    ? 'https://play.google.com/store/apps/details?id=com.anmolindialtd.anmolindialimited'\r\n    : 'https://apps.apple.com/in/app/anmol-coal/id1055161589'\r\n  const deeplink = `anmolcoal://app/app/fetch/${myInitialURL.split('/')[3]}`\r\n\r\n  useEffect(() => {\r\n    window.open(deeplink, '_self')\r\n    setTimeout(() => {\r\n      window.open(downloadLink, '_self')\r\n    }, 1000)\r\n  }, [myInitialURL])\r\n\r\n  return (\r\n    <>\r\n      <Center gridGap={50} h={'80vh'}>\r\n        <Heading textAlign={'center'}>Redirecting to Play Store</Heading>\r\n        <Spinner size={'xl'} colorScheme={'orange'} />\r\n      </Center>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default FetchApp\r\n","import React, { useEffect, useMemo, useState } from 'react'\r\n\r\nimport { Switch, Route, useLocation, Redirect } from 'react-router-dom'\r\nimport Layout from './components/layout'\r\n\r\nimport Login from './pages/auth/Login'\r\nimport Profile from './pages/Profile'\r\nimport Home from './pages/Home'\r\nimport News from './pages/News'\r\nimport BuyCoal from './pages/BuyCoal'\r\nimport Payment from './pages/Payment'\r\nimport MyOrders from './pages/MyOrders'\r\nimport Register from './pages/auth/Register'\r\nimport Transaction from './pages/Transaction'\r\nimport Bank from './pages/Bank'\r\n\r\nimport '@fontsource/inter/400.css'\r\nimport '@fontsource/inter/700.css'\r\nimport { UserStore } from './store/user'\r\nimport Contact from './pages/Contact'\r\nimport Upgrade from './pages/Upgrade'\r\nimport useFetch from 'use-http'\r\nimport { Box, Center, Spinner } from '@chakra-ui/react'\r\nimport { TrailDataStore } from './store/TrialData'\r\nimport Companies from './pages/companies'\r\nimport FetchApp from './pages/FetchApp'\r\nimport OpenDeeplink from './components/OpenDeeplink'\r\n\r\nconst App: React.FC = () => {\r\n  const { user } = UserStore.useState()\r\n  const isAuth = useMemo(() => !!user, [user])\r\n  const trialApi = useFetch('/api/listing/trial_data')\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  useEffect(() => {\r\n    trialApi.post().then((res) => {\r\n      TrailDataStore.update((s) => {\r\n        s.data = res.data\r\n        setLoading(false)\r\n      })\r\n    })\r\n  }, [])\r\n\r\n  if (loading) {\r\n    return (\r\n      <Box mt={6}>\r\n        <Center>\r\n          <Spinner size='sm' />\r\n        </Center>\r\n      </Box>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <Switch>\r\n        <Route path='/' exact strict component={Home} />\r\n        <Route path='/orders' exact component={!isAuth ? Login : MyOrders} />\r\n        <Route path='/payments' exact component={!isAuth ? Login : Payment} />\r\n        <Route\r\n          path='/transactions'\r\n          exact\r\n          component={!isAuth ? Login : Transaction}\r\n        />\r\n        <Route path='/app/fetch/:id' exact component={FetchApp} />\r\n        <Route path='/buy-coal' component={!isAuth ? Login : BuyCoal} />\r\n        <Route path='/news' component={News} />\r\n        <Route path='/profile' component={!isAuth ? Login : Profile} />\r\n        <Route\r\n          path='/login'\r\n          component={!isAuth ? Login : () => <Redirect to='/' />}\r\n        />\r\n        <Route path='/contact' component={Contact} />\r\n        <Route path='/register' component={Register} />\r\n        <Route path='/upgrade' component={Upgrade} />\r\n        <Route path='/banks' component={Bank} />\r\n        <Route path='/companies' component={Companies} />\r\n      </Switch>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { ReportHandler } from 'web-vitals'\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry)\r\n      getFID(onPerfEntry)\r\n      getFCP(onPerfEntry)\r\n      getLCP(onPerfEntry)\r\n      getTTFB(onPerfEntry)\r\n    })\r\n  }\r\n}\r\n\r\nexport default reportWebVitals\r\n","import { CachePolicies, IncomingOptions } from 'use-http'\r\n// import { enc_AES256, dec_objAES256 } from './encryption'\r\n\r\nconst options: IncomingOptions = {\r\n  cachePolicy: CachePolicies.NO_CACHE,\r\n  interceptors: {\r\n    request: ({ options }) => {\r\n      let body: string | any = String(options.body || '{}')\r\n      const jwt = localStorage.getItem('user-token')\r\n      if (jwt) {\r\n        Object.assign(options.headers, {\r\n          Authorization: `Bearer ${jwt}`,\r\n        })\r\n      }\r\n      // body = JSON.parse(body)\r\n\r\n      // Object.keys(body).forEach((key) => {\r\n      //   const value = body[key]\r\n      //   body[key] = enc_AES256(value)\r\n      // })\r\n\r\n      // body = JSON.stringify(body)\r\n      const final = { ...options, body }\r\n      return final\r\n    },\r\n    response: async ({ response }) => {\r\n      // let { data } = response\r\n      // if (data) {\r\n      //   const _data = data.data\r\n      //   Object.assign(data, { data: dec_objAES256(_data) })\r\n      // }\r\n      return response\r\n    },\r\n  },\r\n}\r\n\r\nexport default options\r\n","import { extendTheme } from '@chakra-ui/react'\r\n\r\nconst theme = extendTheme({\r\n  fonts: {\r\n    heading: 'Montserrat',\r\n    body: 'Montserrat',\r\n  },\r\n  colors: {\r\n    brand: {\r\n      '50': '#ffe9ef',\r\n      '100': '#ffc7d3',\r\n      '200': '#f98d9a',\r\n      '300': '#f25c72',\r\n      '400': '#ff1c4f',\r\n      '500': '#ff0033',\r\n      '600': '#f70033',\r\n      '700': '#e5002c',\r\n      '800': '#d80024',\r\n      '900': '#c90018',\r\n    },\r\n  },\r\n})\r\n\r\nexport default theme\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport reportWebVitals from './reportWebVitals'\r\n\r\nimport 'focus-visible'\r\nimport { ChakraProvider } from '@chakra-ui/react'\r\nimport { Provider as HttpProvider } from 'use-http'\r\nimport { BrowserRouter } from 'react-router-dom'\r\n\r\nimport httpOptions from './helpers/http-options'\r\nimport theme from './theme'\r\n\r\nconst { REACT_APP_API_ENDPOINT } = process.env\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <HttpProvider options={httpOptions} url={REACT_APP_API_ENDPOINT}>\r\n        <ChakraProvider theme={theme}>\r\n          <App />\r\n        </ChakraProvider>\r\n      </HttpProvider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n\r\nreportWebVitals()\r\n"],"sourceRoot":""}